name: Build

on:
  push:
  workflow_dispatch:

env:
  PORT: 50051
  pact_do_not_track: true
 
jobs:
  dart:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: dart
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: dart-lang/setup-dart@v1.3
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  deno:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: deno
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  dotnet:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: dotnet
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  golang:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: golang
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  kotlin:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # need to enable binaries in gradle
        # os: [macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: kotlin
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  node:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: node
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g ts-node
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  python:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: python
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - run: pip install pyinstaller wheel
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  ruby:
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: ruby
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7.6"
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  # rust:
  #   timeout-minutes: 10
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #     fail-fast: false
  #   runs-on: ${{ matrix.os }}
  #   defaults:
  #     run:
  #       shell: bash
  #   env:
  #     TARGET: rust
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: ls
  #     - run: pwd
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #     - run: make compile
  #     - name: Install evans
  #       uses: jaxxstorm/action-install-gh-release@v1.9.0
  #       with:
  #         repo: ktr0731/evans
  #         tag: v0.10.9
  #     - run: make test
  swift:
    timeout-minutes: 10
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest, windows-latest, macos-latest] 
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: swift
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: compnerd/gha-setup-swift@main
        if: runner.os == 'Windows'
        with:
          branch: swift-development
          tag: DEVELOPMENT-SNAPSHOT-2022-12-12-a
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
  pact-dart:
    timeout-minutes: 10
    needs: dart
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: dart
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: dart-lang/setup-dart@v1.3
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-deno:
    timeout-minutes: 10
    needs: deno
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: deno
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-dotnet:
    timeout-minutes: 10
    needs: dotnet
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: dotnet
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-golang:
    timeout-minutes: 10
    needs: golang
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: golang
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-kotlin:
    timeout-minutes: 10
    needs: kotlin
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: kotlin
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-node:
    timeout-minutes: 10
    needs: node
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: node
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g ts-node
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-python:
    timeout-minutes: 10
    needs: python
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: python
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  pact-ruby:
    timeout-minutes: 10
    needs: ruby
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: ruby
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7.6"
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
  # pact-rust:
  #   timeout-minutes: 10
  #   needs: rust
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #     fail-fast: false
  #   runs-on: ${{ matrix.os }}
  #   defaults:
  #     run:
  #       shell: bash
  #   env:
  #     TARGET: rust
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: ls
  #     - run: pwd
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #     - run: make compile
  #     - name: Install evans
  #       uses: jaxxstorm/action-install-gh-release@v1.9.0
  #       with:
  #         repo: ktr0731/evans
  #         tag: v0.10.9
  #     - run: make test
  #     - if: runner.os != 'Windows'
  #       run: |
  #         export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
  #         make pact_test
  #     - if: runner.os == 'Windows'
  #       run: |
  #         export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
  #         make pact_test
  pact-swift:
    timeout-minutes: 10
    needs: swift
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      TARGET: swift
    steps:
      - uses: actions/checkout@v3
      - run: ls
      - run: pwd
      - uses: compnerd/gha-setup-swift@main
        if: runner.os == 'Windows'
        with:
          branch: swift-development
          tag: DEVELOPMENT-SNAPSHOT-2022-12-12-a
      - run: make compile
      - name: Install evans
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: ktr0731/evans
          tag: v0.10.9
      - run: make test
      - if: runner.os != 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
      - if: runner.os == 'Windows'
        run: |
          export PACT_PLUGIN_DIR=$GITHUB_WORKSPACE
          make pact_test
