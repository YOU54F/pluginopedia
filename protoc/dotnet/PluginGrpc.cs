// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/plugin.proto
// </auto-generated>
// Original file comments:
// Proto file for Pact plugin interface V1
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcPactPlugin {
  public static partial class PactPlugin
  {
    static readonly string __ServiceName = "io.pact.plugin.PactPlugin";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.InitPluginRequest> __Marshaller_io_pact_plugin_InitPluginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.InitPluginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.InitPluginResponse> __Marshaller_io_pact_plugin_InitPluginResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.InitPluginResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.Catalogue> __Marshaller_io_pact_plugin_Catalogue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.Catalogue.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.CompareContentsRequest> __Marshaller_io_pact_plugin_CompareContentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.CompareContentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.CompareContentsResponse> __Marshaller_io_pact_plugin_CompareContentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.CompareContentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.ConfigureInteractionRequest> __Marshaller_io_pact_plugin_ConfigureInteractionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.ConfigureInteractionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.ConfigureInteractionResponse> __Marshaller_io_pact_plugin_ConfigureInteractionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.ConfigureInteractionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.GenerateContentRequest> __Marshaller_io_pact_plugin_GenerateContentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.GenerateContentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.GenerateContentResponse> __Marshaller_io_pact_plugin_GenerateContentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.GenerateContentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.StartMockServerRequest> __Marshaller_io_pact_plugin_StartMockServerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.StartMockServerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.StartMockServerResponse> __Marshaller_io_pact_plugin_StartMockServerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.StartMockServerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.ShutdownMockServerRequest> __Marshaller_io_pact_plugin_ShutdownMockServerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.ShutdownMockServerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.ShutdownMockServerResponse> __Marshaller_io_pact_plugin_ShutdownMockServerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.ShutdownMockServerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.MockServerRequest> __Marshaller_io_pact_plugin_MockServerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.MockServerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.MockServerResults> __Marshaller_io_pact_plugin_MockServerResults = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.MockServerResults.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.VerificationPreparationRequest> __Marshaller_io_pact_plugin_VerificationPreparationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.VerificationPreparationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.VerificationPreparationResponse> __Marshaller_io_pact_plugin_VerificationPreparationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.VerificationPreparationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.VerifyInteractionRequest> __Marshaller_io_pact_plugin_VerifyInteractionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.VerifyInteractionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcPactPlugin.VerifyInteractionResponse> __Marshaller_io_pact_plugin_VerifyInteractionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcPactPlugin.VerifyInteractionResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.InitPluginRequest, global::GrpcPactPlugin.InitPluginResponse> __Method_InitPlugin = new grpc::Method<global::GrpcPactPlugin.InitPluginRequest, global::GrpcPactPlugin.InitPluginResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitPlugin",
        __Marshaller_io_pact_plugin_InitPluginRequest,
        __Marshaller_io_pact_plugin_InitPluginResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.Catalogue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateCatalogue = new grpc::Method<global::GrpcPactPlugin.Catalogue, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCatalogue",
        __Marshaller_io_pact_plugin_Catalogue,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.CompareContentsRequest, global::GrpcPactPlugin.CompareContentsResponse> __Method_CompareContents = new grpc::Method<global::GrpcPactPlugin.CompareContentsRequest, global::GrpcPactPlugin.CompareContentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CompareContents",
        __Marshaller_io_pact_plugin_CompareContentsRequest,
        __Marshaller_io_pact_plugin_CompareContentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.ConfigureInteractionRequest, global::GrpcPactPlugin.ConfigureInteractionResponse> __Method_ConfigureInteraction = new grpc::Method<global::GrpcPactPlugin.ConfigureInteractionRequest, global::GrpcPactPlugin.ConfigureInteractionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureInteraction",
        __Marshaller_io_pact_plugin_ConfigureInteractionRequest,
        __Marshaller_io_pact_plugin_ConfigureInteractionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.GenerateContentRequest, global::GrpcPactPlugin.GenerateContentResponse> __Method_GenerateContent = new grpc::Method<global::GrpcPactPlugin.GenerateContentRequest, global::GrpcPactPlugin.GenerateContentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateContent",
        __Marshaller_io_pact_plugin_GenerateContentRequest,
        __Marshaller_io_pact_plugin_GenerateContentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.StartMockServerRequest, global::GrpcPactPlugin.StartMockServerResponse> __Method_StartMockServer = new grpc::Method<global::GrpcPactPlugin.StartMockServerRequest, global::GrpcPactPlugin.StartMockServerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartMockServer",
        __Marshaller_io_pact_plugin_StartMockServerRequest,
        __Marshaller_io_pact_plugin_StartMockServerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.ShutdownMockServerRequest, global::GrpcPactPlugin.ShutdownMockServerResponse> __Method_ShutdownMockServer = new grpc::Method<global::GrpcPactPlugin.ShutdownMockServerRequest, global::GrpcPactPlugin.ShutdownMockServerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShutdownMockServer",
        __Marshaller_io_pact_plugin_ShutdownMockServerRequest,
        __Marshaller_io_pact_plugin_ShutdownMockServerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.MockServerRequest, global::GrpcPactPlugin.MockServerResults> __Method_GetMockServerResults = new grpc::Method<global::GrpcPactPlugin.MockServerRequest, global::GrpcPactPlugin.MockServerResults>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMockServerResults",
        __Marshaller_io_pact_plugin_MockServerRequest,
        __Marshaller_io_pact_plugin_MockServerResults);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.VerificationPreparationRequest, global::GrpcPactPlugin.VerificationPreparationResponse> __Method_PrepareInteractionForVerification = new grpc::Method<global::GrpcPactPlugin.VerificationPreparationRequest, global::GrpcPactPlugin.VerificationPreparationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PrepareInteractionForVerification",
        __Marshaller_io_pact_plugin_VerificationPreparationRequest,
        __Marshaller_io_pact_plugin_VerificationPreparationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcPactPlugin.VerifyInteractionRequest, global::GrpcPactPlugin.VerifyInteractionResponse> __Method_VerifyInteraction = new grpc::Method<global::GrpcPactPlugin.VerifyInteractionRequest, global::GrpcPactPlugin.VerifyInteractionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyInteraction",
        __Marshaller_io_pact_plugin_VerifyInteractionRequest,
        __Marshaller_io_pact_plugin_VerifyInteractionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PactPlugin</summary>
    [grpc::BindServiceMethod(typeof(PactPlugin), "BindService")]
    public abstract partial class PactPluginBase
    {
      /// <summary>
      /// Check that the plugin loaded OK. Returns the catalogue entries describing what the plugin provides
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.InitPluginResponse> InitPlugin(global::GrpcPactPlugin.InitPluginRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updated catalogue. This will be sent when the core catalogue has been updated (probably by a plugin loading).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateCatalogue(global::GrpcPactPlugin.Catalogue request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request to perform a comparison of some contents (matching request)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.CompareContentsResponse> CompareContents(global::GrpcPactPlugin.CompareContentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request to configure/setup the interaction for later verification. Data returned will be persisted in the pact file.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.ConfigureInteractionResponse> ConfigureInteraction(global::GrpcPactPlugin.ConfigureInteractionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request to generate the content using any defined generators
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.GenerateContentResponse> GenerateContent(global::GrpcPactPlugin.GenerateContentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start a mock server
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.StartMockServerResponse> StartMockServer(global::GrpcPactPlugin.StartMockServerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Shutdown a running mock server
      /// TODO: Replace the message types with MockServerRequest and MockServerResults in the next major version
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.ShutdownMockServerResponse> ShutdownMockServer(global::GrpcPactPlugin.ShutdownMockServerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the matching results from a running mock server
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.MockServerResults> GetMockServerResults(global::GrpcPactPlugin.MockServerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Prepare an interaction for verification. This should return any data required to construct any request
      /// so that it can be amended before the verification is run
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.VerificationPreparationResponse> PrepareInteractionForVerification(global::GrpcPactPlugin.VerificationPreparationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Execute the verification for the interaction.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcPactPlugin.VerifyInteractionResponse> VerifyInteraction(global::GrpcPactPlugin.VerifyInteractionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PactPluginBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_InitPlugin, serviceImpl.InitPlugin)
          .AddMethod(__Method_UpdateCatalogue, serviceImpl.UpdateCatalogue)
          .AddMethod(__Method_CompareContents, serviceImpl.CompareContents)
          .AddMethod(__Method_ConfigureInteraction, serviceImpl.ConfigureInteraction)
          .AddMethod(__Method_GenerateContent, serviceImpl.GenerateContent)
          .AddMethod(__Method_StartMockServer, serviceImpl.StartMockServer)
          .AddMethod(__Method_ShutdownMockServer, serviceImpl.ShutdownMockServer)
          .AddMethod(__Method_GetMockServerResults, serviceImpl.GetMockServerResults)
          .AddMethod(__Method_PrepareInteractionForVerification, serviceImpl.PrepareInteractionForVerification)
          .AddMethod(__Method_VerifyInteraction, serviceImpl.VerifyInteraction).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PactPluginBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_InitPlugin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.InitPluginRequest, global::GrpcPactPlugin.InitPluginResponse>(serviceImpl.InitPlugin));
      serviceBinder.AddMethod(__Method_UpdateCatalogue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.Catalogue, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.UpdateCatalogue));
      serviceBinder.AddMethod(__Method_CompareContents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.CompareContentsRequest, global::GrpcPactPlugin.CompareContentsResponse>(serviceImpl.CompareContents));
      serviceBinder.AddMethod(__Method_ConfigureInteraction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.ConfigureInteractionRequest, global::GrpcPactPlugin.ConfigureInteractionResponse>(serviceImpl.ConfigureInteraction));
      serviceBinder.AddMethod(__Method_GenerateContent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.GenerateContentRequest, global::GrpcPactPlugin.GenerateContentResponse>(serviceImpl.GenerateContent));
      serviceBinder.AddMethod(__Method_StartMockServer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.StartMockServerRequest, global::GrpcPactPlugin.StartMockServerResponse>(serviceImpl.StartMockServer));
      serviceBinder.AddMethod(__Method_ShutdownMockServer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.ShutdownMockServerRequest, global::GrpcPactPlugin.ShutdownMockServerResponse>(serviceImpl.ShutdownMockServer));
      serviceBinder.AddMethod(__Method_GetMockServerResults, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.MockServerRequest, global::GrpcPactPlugin.MockServerResults>(serviceImpl.GetMockServerResults));
      serviceBinder.AddMethod(__Method_PrepareInteractionForVerification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.VerificationPreparationRequest, global::GrpcPactPlugin.VerificationPreparationResponse>(serviceImpl.PrepareInteractionForVerification));
      serviceBinder.AddMethod(__Method_VerifyInteraction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcPactPlugin.VerifyInteractionRequest, global::GrpcPactPlugin.VerifyInteractionResponse>(serviceImpl.VerifyInteraction));
    }

  }
}
#endregion
