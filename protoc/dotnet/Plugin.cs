// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/plugin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcPactPlugin {

  /// <summary>Holder for reflection information generated from Protos/plugin.proto</summary>
  public static partial class PluginReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/plugin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PluginReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90b3MvcGx1Z2luLnByb3RvEg5pby5wYWN0LnBsdWdpbhocZ29vZ2xl",
            "L3Byb3RvYnVmL3N0cnVjdC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBw",
            "ZXJzLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8iPAoRSW5p",
            "dFBsdWdpblJlcXVlc3QSFgoOaW1wbGVtZW50YXRpb24YASABKAkSDwoHdmVy",
            "c2lvbhgCIAEoCSKmAgoOQ2F0YWxvZ3VlRW50cnkSNgoEdHlwZRgBIAEoDjIo",
            "LmlvLnBhY3QucGx1Z2luLkNhdGFsb2d1ZUVudHJ5LkVudHJ5VHlwZRILCgNr",
            "ZXkYAiABKAkSOgoGdmFsdWVzGAMgAygLMiouaW8ucGFjdC5wbHVnaW4uQ2F0",
            "YWxvZ3VlRW50cnkuVmFsdWVzRW50cnkaLQoLVmFsdWVzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJkCglFbnRyeVR5cGUSEwoPQ09O",
            "VEVOVF9NQVRDSEVSEAASFQoRQ09OVEVOVF9HRU5FUkFUT1IQARINCglUUkFO",
            "U1BPUlQQAhILCgdNQVRDSEVSEAMSDwoLSU5URVJBQ1RJT04QBCJHChJJbml0",
            "UGx1Z2luUmVzcG9uc2USMQoJY2F0YWxvZ3VlGAEgAygLMh4uaW8ucGFjdC5w",
            "bHVnaW4uQ2F0YWxvZ3VlRW50cnkiPgoJQ2F0YWxvZ3VlEjEKCWNhdGFsb2d1",
            "ZRgBIAMoCzIeLmlvLnBhY3QucGx1Z2luLkNhdGFsb2d1ZUVudHJ5Ir4BCgRC",
            "b2R5EhMKC2NvbnRlbnRUeXBlGAEgASgJEiwKB2NvbnRlbnQYAiABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZRI9Cg9jb250ZW50VHlwZUhpbnQY",
            "AyABKA4yJC5pby5wYWN0LnBsdWdpbi5Cb2R5LkNvbnRlbnRUeXBlSGludCI0",
            "Cg9Db250ZW50VHlwZUhpbnQSCwoHREVGQVVMVBAAEggKBFRFWFQQARIKCgZC",
            "SU5BUlkQAiLWAgoWQ29tcGFyZUNvbnRlbnRzUmVxdWVzdBImCghleHBlY3Rl",
            "ZBgBIAEoCzIULmlvLnBhY3QucGx1Z2luLkJvZHkSJAoGYWN0dWFsGAIgASgL",
            "MhQuaW8ucGFjdC5wbHVnaW4uQm9keRIdChVhbGxvd191bmV4cGVjdGVkX2tl",
            "eXMYAyABKAgSQAoFcnVsZXMYBCADKAsyMS5pby5wYWN0LnBsdWdpbi5Db21w",
            "YXJlQ29udGVudHNSZXF1ZXN0LlJ1bGVzRW50cnkSQAoTcGx1Z2luQ29uZmln",
            "dXJhdGlvbhgFIAEoCzIjLmlvLnBhY3QucGx1Z2luLlBsdWdpbkNvbmZpZ3Vy",
            "YXRpb24aSwoKUnVsZXNFbnRyeRILCgNrZXkYASABKAkSLAoFdmFsdWUYAiAB",
            "KAsyHS5pby5wYWN0LnBsdWdpbi5NYXRjaGluZ1J1bGVzOgI4ASI3ChNDb250",
            "ZW50VHlwZU1pc21hdGNoEhAKCGV4cGVjdGVkGAEgASgJEg4KBmFjdHVhbBgC",
            "IAEoCSKbAQoPQ29udGVudE1pc21hdGNoEi0KCGV4cGVjdGVkGAEgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkJ5dGVzVmFsdWUSKwoGYWN0dWFsGAIgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkJ5dGVzVmFsdWUSEAoIbWlzbWF0Y2gYAyABKAkS",
            "DAoEcGF0aBgEIAEoCRIMCgRkaWZmGAUgASgJIkgKEUNvbnRlbnRNaXNtYXRj",
            "aGVzEjMKCm1pc21hdGNoZXMYASADKAsyHy5pby5wYWN0LnBsdWdpbi5Db250",
            "ZW50TWlzbWF0Y2gi/QEKF0NvbXBhcmVDb250ZW50c1Jlc3BvbnNlEg0KBWVy",
            "cm9yGAEgASgJEjkKDHR5cGVNaXNtYXRjaBgCIAEoCzIjLmlvLnBhY3QucGx1",
            "Z2luLkNvbnRlbnRUeXBlTWlzbWF0Y2gSRQoHcmVzdWx0cxgDIAMoCzI0Lmlv",
            "LnBhY3QucGx1Z2luLkNvbXBhcmVDb250ZW50c1Jlc3BvbnNlLlJlc3VsdHNF",
            "bnRyeRpRCgxSZXN1bHRzRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIg",
            "ASgLMiEuaW8ucGFjdC5wbHVnaW4uQ29udGVudE1pc21hdGNoZXM6AjgBImMK",
            "G0NvbmZpZ3VyZUludGVyYWN0aW9uUmVxdWVzdBITCgtjb250ZW50VHlwZRgB",
            "IAEoCRIvCg5jb250ZW50c0NvbmZpZxgCIAEoCzIXLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJ1Y3QiRQoMTWF0Y2hpbmdSdWxlEgwKBHR5cGUYASABKAkSJwoGdmFs",
            "dWVzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCI7Cg1NYXRjaGlu",
            "Z1J1bGVzEioKBHJ1bGUYASADKAsyHC5pby5wYWN0LnBsdWdpbi5NYXRjaGlu",
            "Z1J1bGUiQgoJR2VuZXJhdG9yEgwKBHR5cGUYASABKAkSJwoGdmFsdWVzGAIg",
            "ASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCKEAQoTUGx1Z2luQ29uZmln",
            "dXJhdGlvbhI5ChhpbnRlcmFjdGlvbkNvbmZpZ3VyYXRpb24YASABKAsyFy5n",
            "b29nbGUucHJvdG9idWYuU3RydWN0EjIKEXBhY3RDb25maWd1cmF0aW9uGAIg",
            "ASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCL5BAoTSW50ZXJhY3Rpb25S",
            "ZXNwb25zZRImCghjb250ZW50cxgBIAEoCzIULmlvLnBhY3QucGx1Z2luLkJv",
            "ZHkSPQoFcnVsZXMYAiADKAsyLi5pby5wYWN0LnBsdWdpbi5JbnRlcmFjdGlv",
            "blJlc3BvbnNlLlJ1bGVzRW50cnkSRwoKZ2VuZXJhdG9ycxgDIAMoCzIzLmlv",
            "LnBhY3QucGx1Z2luLkludGVyYWN0aW9uUmVzcG9uc2UuR2VuZXJhdG9yc0Vu",
            "dHJ5EjAKD21lc3NhZ2VNZXRhZGF0YRgEIAEoCzIXLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJ1Y3QSQAoTcGx1Z2luQ29uZmlndXJhdGlvbhgFIAEoCzIjLmlvLnBh",
            "Y3QucGx1Z2luLlBsdWdpbkNvbmZpZ3VyYXRpb24SGQoRaW50ZXJhY3Rpb25N",
            "YXJrdXAYBiABKAkSTQoVaW50ZXJhY3Rpb25NYXJrdXBUeXBlGAcgASgOMi4u",
            "aW8ucGFjdC5wbHVnaW4uSW50ZXJhY3Rpb25SZXNwb25zZS5NYXJrdXBUeXBl",
            "EhAKCHBhcnROYW1lGAggASgJGksKClJ1bGVzRW50cnkSCwoDa2V5GAEgASgJ",
            "EiwKBXZhbHVlGAIgASgLMh0uaW8ucGFjdC5wbHVnaW4uTWF0Y2hpbmdSdWxl",
            "czoCOAEaTAoPR2VuZXJhdG9yc0VudHJ5EgsKA2tleRgBIAEoCRIoCgV2YWx1",
            "ZRgCIAEoCzIZLmlvLnBhY3QucGx1Z2luLkdlbmVyYXRvcjoCOAEiJwoKTWFy",
            "a3VwVHlwZRIPCgtDT01NT05fTUFSSxAAEggKBEhUTUwQASKpAQocQ29uZmln",
            "dXJlSW50ZXJhY3Rpb25SZXNwb25zZRINCgVlcnJvchgBIAEoCRI4CgtpbnRl",
            "cmFjdGlvbhgCIAMoCzIjLmlvLnBhY3QucGx1Z2luLkludGVyYWN0aW9uUmVz",
            "cG9uc2USQAoTcGx1Z2luQ29uZmlndXJhdGlvbhgDIAEoCzIjLmlvLnBhY3Qu",
            "cGx1Z2luLlBsdWdpbkNvbmZpZ3VyYXRpb24inAIKFkdlbmVyYXRlQ29udGVu",
            "dFJlcXVlc3QSJgoIY29udGVudHMYASABKAsyFC5pby5wYWN0LnBsdWdpbi5C",
            "b2R5EkoKCmdlbmVyYXRvcnMYAiADKAsyNi5pby5wYWN0LnBsdWdpbi5HZW5l",
            "cmF0ZUNvbnRlbnRSZXF1ZXN0LkdlbmVyYXRvcnNFbnRyeRJAChNwbHVnaW5D",
            "b25maWd1cmF0aW9uGAMgASgLMiMuaW8ucGFjdC5wbHVnaW4uUGx1Z2luQ29u",
            "ZmlndXJhdGlvbhpMCg9HZW5lcmF0b3JzRW50cnkSCwoDa2V5GAEgASgJEigK",
            "BXZhbHVlGAIgASgLMhkuaW8ucGFjdC5wbHVnaW4uR2VuZXJhdG9yOgI4ASJB",
            "ChdHZW5lcmF0ZUNvbnRlbnRSZXNwb25zZRImCghjb250ZW50cxgBIAEoCzIU",
            "LmlvLnBhY3QucGx1Z2luLkJvZHkiWAoWU3RhcnRNb2NrU2VydmVyUmVxdWVz",
            "dBIVCg1ob3N0SW50ZXJmYWNlGAEgASgJEgwKBHBvcnQYAiABKA0SCwoDdGxz",
            "GAMgASgIEgwKBHBhY3QYBCABKAkibAoXU3RhcnRNb2NrU2VydmVyUmVzcG9u",
            "c2USDwoFZXJyb3IYASABKAlIABI0CgdkZXRhaWxzGAIgASgLMiEuaW8ucGFj",
            "dC5wbHVnaW4uTW9ja1NlcnZlckRldGFpbHNIAEIKCghyZXNwb25zZSI/ChFN",
            "b2NrU2VydmVyRGV0YWlscxILCgNrZXkYASABKAkSDAoEcG9ydBgCIAEoDRIP",
            "CgdhZGRyZXNzGAMgASgJIi4KGVNodXRkb3duTW9ja1NlcnZlclJlcXVlc3QS",
            "EQoJc2VydmVyS2V5GAEgASgJIiYKEU1vY2tTZXJ2ZXJSZXF1ZXN0EhEKCXNl",
            "cnZlcktleRgBIAEoCSJkChBNb2NrU2VydmVyUmVzdWx0EgwKBHBhdGgYASAB",
            "KAkSDQoFZXJyb3IYAiABKAkSMwoKbWlzbWF0Y2hlcxgDIAMoCzIfLmlvLnBh",
            "Y3QucGx1Z2luLkNvbnRlbnRNaXNtYXRjaCJbChpTaHV0ZG93bk1vY2tTZXJ2",
            "ZXJSZXNwb25zZRIKCgJvaxgBIAEoCBIxCgdyZXN1bHRzGAIgAygLMiAuaW8u",
            "cGFjdC5wbHVnaW4uTW9ja1NlcnZlclJlc3VsdCJSChFNb2NrU2VydmVyUmVz",
            "dWx0cxIKCgJvaxgBIAEoCBIxCgdyZXN1bHRzGAIgAygLMiAuaW8ucGFjdC5w",
            "bHVnaW4uTW9ja1NlcnZlclJlc3VsdCJvCh5WZXJpZmljYXRpb25QcmVwYXJh",
            "dGlvblJlcXVlc3QSDAoEcGFjdBgBIAEoCRIWCg5pbnRlcmFjdGlvbktleRgC",
            "IAEoCRInCgZjb25maWcYAyABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0",
            "ImEKDU1ldGFkYXRhVmFsdWUSMAoObm9uQmluYXJ5VmFsdWUYASABKAsyFi5n",
            "b29nbGUucHJvdG9idWYuVmFsdWVIABIVCgtiaW5hcnlWYWx1ZRgCIAEoDEgA",
            "QgcKBXZhbHVlIsYBCg9JbnRlcmFjdGlvbkRhdGESIgoEYm9keRgBIAEoCzIU",
            "LmlvLnBhY3QucGx1Z2luLkJvZHkSPwoIbWV0YWRhdGEYAiADKAsyLS5pby5w",
            "YWN0LnBsdWdpbi5JbnRlcmFjdGlvbkRhdGEuTWV0YWRhdGFFbnRyeRpOCg1N",
            "ZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLmlv",
            "LnBhY3QucGx1Z2luLk1ldGFkYXRhVmFsdWU6AjgBInoKH1ZlcmlmaWNhdGlv",
            "blByZXBhcmF0aW9uUmVzcG9uc2USDwoFZXJyb3IYASABKAlIABI6Cg9pbnRl",
            "cmFjdGlvbkRhdGEYAiABKAsyHy5pby5wYWN0LnBsdWdpbi5JbnRlcmFjdGlv",
            "bkRhdGFIAEIKCghyZXNwb25zZSKjAQoYVmVyaWZ5SW50ZXJhY3Rpb25SZXF1",
            "ZXN0EjgKD2ludGVyYWN0aW9uRGF0YRgBIAEoCzIfLmlvLnBhY3QucGx1Z2lu",
            "LkludGVyYWN0aW9uRGF0YRInCgZjb25maWcYAiABKAsyFy5nb29nbGUucHJv",
            "dG9idWYuU3RydWN0EgwKBHBhY3QYAyABKAkSFgoOaW50ZXJhY3Rpb25LZXkY",
            "BCABKAkiaAoWVmVyaWZpY2F0aW9uUmVzdWx0SXRlbRIPCgVlcnJvchgBIAEo",
            "CUgAEjMKCG1pc21hdGNoGAIgASgLMh8uaW8ucGFjdC5wbHVnaW4uQ29udGVu",
            "dE1pc21hdGNoSABCCAoGcmVzdWx0IqgBChJWZXJpZmljYXRpb25SZXN1bHQS",
            "DwoHc3VjY2VzcxgBIAEoCBI1CgxyZXNwb25zZURhdGEYAiABKAsyHy5pby5w",
            "YWN0LnBsdWdpbi5JbnRlcmFjdGlvbkRhdGESOgoKbWlzbWF0Y2hlcxgDIAMo",
            "CzImLmlvLnBhY3QucGx1Z2luLlZlcmlmaWNhdGlvblJlc3VsdEl0ZW0SDgoG",
            "b3V0cHV0GAQgAygJIm4KGVZlcmlmeUludGVyYWN0aW9uUmVzcG9uc2USDwoF",
            "ZXJyb3IYASABKAlIABI0CgZyZXN1bHQYAiABKAsyIi5pby5wYWN0LnBsdWdp",
            "bi5WZXJpZmljYXRpb25SZXN1bHRIAEIKCghyZXNwb25zZTKCCAoKUGFjdFBs",
            "dWdpbhJTCgpJbml0UGx1Z2luEiEuaW8ucGFjdC5wbHVnaW4uSW5pdFBsdWdp",
            "blJlcXVlc3QaIi5pby5wYWN0LnBsdWdpbi5Jbml0UGx1Z2luUmVzcG9uc2US",
            "RAoPVXBkYXRlQ2F0YWxvZ3VlEhkuaW8ucGFjdC5wbHVnaW4uQ2F0YWxvZ3Vl",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmIKD0NvbXBhcmVDb250ZW50cxIm",
            "LmlvLnBhY3QucGx1Z2luLkNvbXBhcmVDb250ZW50c1JlcXVlc3QaJy5pby5w",
            "YWN0LnBsdWdpbi5Db21wYXJlQ29udGVudHNSZXNwb25zZRJxChRDb25maWd1",
            "cmVJbnRlcmFjdGlvbhIrLmlvLnBhY3QucGx1Z2luLkNvbmZpZ3VyZUludGVy",
            "YWN0aW9uUmVxdWVzdBosLmlvLnBhY3QucGx1Z2luLkNvbmZpZ3VyZUludGVy",
            "YWN0aW9uUmVzcG9uc2USYgoPR2VuZXJhdGVDb250ZW50EiYuaW8ucGFjdC5w",
            "bHVnaW4uR2VuZXJhdGVDb250ZW50UmVxdWVzdBonLmlvLnBhY3QucGx1Z2lu",
            "LkdlbmVyYXRlQ29udGVudFJlc3BvbnNlEmIKD1N0YXJ0TW9ja1NlcnZlchIm",
            "LmlvLnBhY3QucGx1Z2luLlN0YXJ0TW9ja1NlcnZlclJlcXVlc3QaJy5pby5w",
            "YWN0LnBsdWdpbi5TdGFydE1vY2tTZXJ2ZXJSZXNwb25zZRJrChJTaHV0ZG93",
            "bk1vY2tTZXJ2ZXISKS5pby5wYWN0LnBsdWdpbi5TaHV0ZG93bk1vY2tTZXJ2",
            "ZXJSZXF1ZXN0GiouaW8ucGFjdC5wbHVnaW4uU2h1dGRvd25Nb2NrU2VydmVy",
            "UmVzcG9uc2USXAoUR2V0TW9ja1NlcnZlclJlc3VsdHMSIS5pby5wYWN0LnBs",
            "dWdpbi5Nb2NrU2VydmVyUmVxdWVzdBohLmlvLnBhY3QucGx1Z2luLk1vY2tT",
            "ZXJ2ZXJSZXN1bHRzEoQBCiFQcmVwYXJlSW50ZXJhY3Rpb25Gb3JWZXJpZmlj",
            "YXRpb24SLi5pby5wYWN0LnBsdWdpbi5WZXJpZmljYXRpb25QcmVwYXJhdGlv",
            "blJlcXVlc3QaLy5pby5wYWN0LnBsdWdpbi5WZXJpZmljYXRpb25QcmVwYXJh",
            "dGlvblJlc3BvbnNlEmgKEVZlcmlmeUludGVyYWN0aW9uEiguaW8ucGFjdC5w",
            "bHVnaW4uVmVyaWZ5SW50ZXJhY3Rpb25SZXF1ZXN0GikuaW8ucGFjdC5wbHVn",
            "aW4uVmVyaWZ5SW50ZXJhY3Rpb25SZXNwb25zZUIhWg5pby5wYWN0LnBsdWdp",
            "bqoCDkdycGNQYWN0UGx1Z2luYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.InitPluginRequest), global::GrpcPactPlugin.InitPluginRequest.Parser, new[]{ "Implementation", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.CatalogueEntry), global::GrpcPactPlugin.CatalogueEntry.Parser, new[]{ "Type", "Key", "Values" }, null, new[]{ typeof(global::GrpcPactPlugin.CatalogueEntry.Types.EntryType) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.InitPluginResponse), global::GrpcPactPlugin.InitPluginResponse.Parser, new[]{ "Catalogue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.Catalogue), global::GrpcPactPlugin.Catalogue.Parser, new[]{ "Catalogue_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.Body), global::GrpcPactPlugin.Body.Parser, new[]{ "ContentType", "Content", "ContentTypeHint" }, null, new[]{ typeof(global::GrpcPactPlugin.Body.Types.ContentTypeHint) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.CompareContentsRequest), global::GrpcPactPlugin.CompareContentsRequest.Parser, new[]{ "Expected", "Actual", "AllowUnexpectedKeys", "Rules", "PluginConfiguration" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ContentTypeMismatch), global::GrpcPactPlugin.ContentTypeMismatch.Parser, new[]{ "Expected", "Actual" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ContentMismatch), global::GrpcPactPlugin.ContentMismatch.Parser, new[]{ "Expected", "Actual", "Mismatch", "Path", "Diff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ContentMismatches), global::GrpcPactPlugin.ContentMismatches.Parser, new[]{ "Mismatches" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.CompareContentsResponse), global::GrpcPactPlugin.CompareContentsResponse.Parser, new[]{ "Error", "TypeMismatch", "Results" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ConfigureInteractionRequest), global::GrpcPactPlugin.ConfigureInteractionRequest.Parser, new[]{ "ContentType", "ContentsConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MatchingRule), global::GrpcPactPlugin.MatchingRule.Parser, new[]{ "Type", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MatchingRules), global::GrpcPactPlugin.MatchingRules.Parser, new[]{ "Rule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.Generator), global::GrpcPactPlugin.Generator.Parser, new[]{ "Type", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.PluginConfiguration), global::GrpcPactPlugin.PluginConfiguration.Parser, new[]{ "InteractionConfiguration", "PactConfiguration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.InteractionResponse), global::GrpcPactPlugin.InteractionResponse.Parser, new[]{ "Contents", "Rules", "Generators", "MessageMetadata", "PluginConfiguration", "InteractionMarkup", "InteractionMarkupType", "PartName" }, null, new[]{ typeof(global::GrpcPactPlugin.InteractionResponse.Types.MarkupType) }, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ConfigureInteractionResponse), global::GrpcPactPlugin.ConfigureInteractionResponse.Parser, new[]{ "Error", "Interaction", "PluginConfiguration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.GenerateContentRequest), global::GrpcPactPlugin.GenerateContentRequest.Parser, new[]{ "Contents", "Generators", "PluginConfiguration" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.GenerateContentResponse), global::GrpcPactPlugin.GenerateContentResponse.Parser, new[]{ "Contents" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.StartMockServerRequest), global::GrpcPactPlugin.StartMockServerRequest.Parser, new[]{ "HostInterface", "Port", "Tls", "Pact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.StartMockServerResponse), global::GrpcPactPlugin.StartMockServerResponse.Parser, new[]{ "Error", "Details" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MockServerDetails), global::GrpcPactPlugin.MockServerDetails.Parser, new[]{ "Key", "Port", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ShutdownMockServerRequest), global::GrpcPactPlugin.ShutdownMockServerRequest.Parser, new[]{ "ServerKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MockServerRequest), global::GrpcPactPlugin.MockServerRequest.Parser, new[]{ "ServerKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MockServerResult), global::GrpcPactPlugin.MockServerResult.Parser, new[]{ "Path", "Error", "Mismatches" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.ShutdownMockServerResponse), global::GrpcPactPlugin.ShutdownMockServerResponse.Parser, new[]{ "Ok", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MockServerResults), global::GrpcPactPlugin.MockServerResults.Parser, new[]{ "Ok", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerificationPreparationRequest), global::GrpcPactPlugin.VerificationPreparationRequest.Parser, new[]{ "Pact", "InteractionKey", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.MetadataValue), global::GrpcPactPlugin.MetadataValue.Parser, new[]{ "NonBinaryValue", "BinaryValue" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.InteractionData), global::GrpcPactPlugin.InteractionData.Parser, new[]{ "Body", "Metadata" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerificationPreparationResponse), global::GrpcPactPlugin.VerificationPreparationResponse.Parser, new[]{ "Error", "InteractionData" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerifyInteractionRequest), global::GrpcPactPlugin.VerifyInteractionRequest.Parser, new[]{ "InteractionData", "Config", "Pact", "InteractionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerificationResultItem), global::GrpcPactPlugin.VerificationResultItem.Parser, new[]{ "Error", "Mismatch" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerificationResult), global::GrpcPactPlugin.VerificationResult.Parser, new[]{ "Success", "ResponseData", "Mismatches", "Output" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPactPlugin.VerifyInteractionResponse), global::GrpcPactPlugin.VerifyInteractionResponse.Parser, new[]{ "Error", "Result" }, new[]{ "Response" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request to verify the plugin has loaded OK
  /// </summary>
  public sealed partial class InitPluginRequest : pb::IMessage<InitPluginRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitPluginRequest> _parser = new pb::MessageParser<InitPluginRequest>(() => new InitPluginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitPluginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginRequest(InitPluginRequest other) : this() {
      implementation_ = other.implementation_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginRequest Clone() {
      return new InitPluginRequest(this);
    }

    /// <summary>Field number for the "implementation" field.</summary>
    public const int ImplementationFieldNumber = 1;
    private string implementation_ = "";
    /// <summary>
    /// Implementation calling the plugin
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Implementation {
      get { return implementation_; }
      set {
        implementation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Version of the implementation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitPluginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitPluginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Implementation != other.Implementation) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Implementation.Length != 0) hash ^= Implementation.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Implementation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Implementation);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Implementation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Implementation);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Implementation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Implementation);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitPluginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Implementation.Length != 0) {
        Implementation = other.Implementation;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Implementation = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Implementation = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Entry to be added to the core catalogue. Each entry describes one of the features the plugin provides.
  /// Entries will be stored in the catalogue under the key "plugin/$name/$type/$key".
  /// </summary>
  public sealed partial class CatalogueEntry : pb::IMessage<CatalogueEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CatalogueEntry> _parser = new pb::MessageParser<CatalogueEntry>(() => new CatalogueEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogueEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueEntry(CatalogueEntry other) : this() {
      type_ = other.type_;
      key_ = other.key_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogueEntry Clone() {
      return new CatalogueEntry(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::GrpcPactPlugin.CatalogueEntry.Types.EntryType type_ = global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher;
    /// <summary>
    /// Entry type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.CatalogueEntry.Types.EntryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Entry key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_values_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> values_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Associated data required for the entry. For CONTENT_MATCHER and CONTENT_GENERATOR types, a "content-types"
    /// value (separated by semi-colons) is required for all the content types the plugin supports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogueEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogueEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Key != other.Key) return false;
      if (!Values.Equals(other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher) hash ^= Type.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(output, _map_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(ref output, _map_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      size += values_.CalculateSize(_map_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogueEntry other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::GrpcPactPlugin.CatalogueEntry.Types.EntryType.ContentMatcher) {
        Type = other.Type;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::GrpcPactPlugin.CatalogueEntry.Types.EntryType) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(input, _map_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::GrpcPactPlugin.CatalogueEntry.Types.EntryType) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(ref input, _map_values_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CatalogueEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EntryType {
        /// <summary>
        /// Matcher for contents of messages, requests or response bodies
        /// </summary>
        [pbr::OriginalName("CONTENT_MATCHER")] ContentMatcher = 0,
        /// <summary>
        /// Generator for contents of messages, requests or response bodies
        /// </summary>
        [pbr::OriginalName("CONTENT_GENERATOR")] ContentGenerator = 1,
        /// <summary>
        /// Transport for a network protocol
        /// </summary>
        [pbr::OriginalName("TRANSPORT")] Transport = 2,
        /// <summary>
        /// Matching rule for content field/values
        /// </summary>
        [pbr::OriginalName("MATCHER")] Matcher = 3,
        /// <summary>
        /// Type of interaction
        /// </summary>
        [pbr::OriginalName("INTERACTION")] Interaction = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Response to init plugin, providing the catalogue entries the plugin provides
  /// </summary>
  public sealed partial class InitPluginResponse : pb::IMessage<InitPluginResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitPluginResponse> _parser = new pb::MessageParser<InitPluginResponse>(() => new InitPluginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitPluginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginResponse(InitPluginResponse other) : this() {
      catalogue_ = other.catalogue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitPluginResponse Clone() {
      return new InitPluginResponse(this);
    }

    /// <summary>Field number for the "catalogue" field.</summary>
    public const int CatalogueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.CatalogueEntry> _repeated_catalogue_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcPactPlugin.CatalogueEntry.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry> catalogue_ = new pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry>();
    /// <summary>
    /// List of entries the plugin supports
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry> Catalogue {
      get { return catalogue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitPluginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitPluginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catalogue_.Equals(other.catalogue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catalogue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      catalogue_.WriteTo(output, _repeated_catalogue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      catalogue_.WriteTo(ref output, _repeated_catalogue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catalogue_.CalculateSize(_repeated_catalogue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitPluginResponse other) {
      if (other == null) {
        return;
      }
      catalogue_.Add(other.catalogue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            catalogue_.AddEntriesFrom(input, _repeated_catalogue_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            catalogue_.AddEntriesFrom(ref input, _repeated_catalogue_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Catalogue of Core Pact + Plugin features
  /// </summary>
  public sealed partial class Catalogue : pb::IMessage<Catalogue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Catalogue> _parser = new pb::MessageParser<Catalogue>(() => new Catalogue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Catalogue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalogue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalogue(Catalogue other) : this() {
      catalogue_ = other.catalogue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Catalogue Clone() {
      return new Catalogue(this);
    }

    /// <summary>Field number for the "catalogue" field.</summary>
    public const int Catalogue_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.CatalogueEntry> _repeated_catalogue_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcPactPlugin.CatalogueEntry.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry> catalogue_ = new pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry>();
    /// <summary>
    /// List of entries from the core catalogue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.CatalogueEntry> Catalogue_ {
      get { return catalogue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Catalogue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Catalogue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!catalogue_.Equals(other.catalogue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= catalogue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      catalogue_.WriteTo(output, _repeated_catalogue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      catalogue_.WriteTo(ref output, _repeated_catalogue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += catalogue_.CalculateSize(_repeated_catalogue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Catalogue other) {
      if (other == null) {
        return;
      }
      catalogue_.Add(other.catalogue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            catalogue_.AddEntriesFrom(input, _repeated_catalogue_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            catalogue_.AddEntriesFrom(ref input, _repeated_catalogue_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a request, response or message body
  /// </summary>
  public sealed partial class Body : pb::IMessage<Body>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Body> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body(Body other) : this() {
      contentType_ = other.contentType_;
      Content = other.Content;
      contentTypeHint_ = other.contentTypeHint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body Clone() {
      return new Body(this);
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 1;
    private string contentType_ = "";
    /// <summary>
    /// The content type of the body in MIME format (i.e. application/json)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _single_content_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(18);
    private pb::ByteString content_;
    /// <summary>
    /// Bytes of the actual content
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "contentTypeHint" field.</summary>
    public const int ContentTypeHintFieldNumber = 3;
    private global::GrpcPactPlugin.Body.Types.ContentTypeHint contentTypeHint_ = global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default;
    /// <summary>
    /// Content type override to apply (if required). If omitted, the default rules of the Pact implementation
    /// will be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body.Types.ContentTypeHint ContentTypeHint {
      get { return contentTypeHint_; }
      set {
        contentTypeHint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Body);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Body other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentType != other.ContentType) return false;
      if (Content != other.Content) return false;
      if (ContentTypeHint != other.ContentTypeHint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (ContentTypeHint != global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default) hash ^= ContentTypeHint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentType);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (ContentTypeHint != global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ContentTypeHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentType);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(ref output, Content);
      }
      if (ContentTypeHint != global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ContentTypeHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (ContentTypeHint != global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentTypeHint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Body other) {
      if (other == null) {
        return;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != pb::ByteString.Empty) {
          Content = other.Content;
        }
      }
      if (other.ContentTypeHint != global::GrpcPactPlugin.Body.Types.ContentTypeHint.Default) {
        ContentTypeHint = other.ContentTypeHint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContentType = input.ReadString();
            break;
          }
          case 18: {
            pb::ByteString value = _single_content_codec.Read(input);
            if (content_ == null || value != pb::ByteString.Empty) {
              Content = value;
            }
            break;
          }
          case 24: {
            ContentTypeHint = (global::GrpcPactPlugin.Body.Types.ContentTypeHint) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContentType = input.ReadString();
            break;
          }
          case 18: {
            pb::ByteString value = _single_content_codec.Read(ref input);
            if (content_ == null || value != pb::ByteString.Empty) {
              Content = value;
            }
            break;
          }
          case 24: {
            ContentTypeHint = (global::GrpcPactPlugin.Body.Types.ContentTypeHint) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Body message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum of content type override. This is a hint on how the content type should be treated.
      /// </summary>
      public enum ContentTypeHint {
        /// <summary>
        /// Determine the form of the content using the default rules of the Pact implementation
        /// </summary>
        [pbr::OriginalName("DEFAULT")] Default = 0,
        /// <summary>
        /// Contents must always be treated as a text form
        /// </summary>
        [pbr::OriginalName("TEXT")] Text = 1,
        /// <summary>
        /// Contents must always be treated as a binary form
        /// </summary>
        [pbr::OriginalName("BINARY")] Binary = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request to preform a comparison on an actual body given the expected one
  /// </summary>
  public sealed partial class CompareContentsRequest : pb::IMessage<CompareContentsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompareContentsRequest> _parser = new pb::MessageParser<CompareContentsRequest>(() => new CompareContentsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompareContentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsRequest(CompareContentsRequest other) : this() {
      expected_ = other.expected_ != null ? other.expected_.Clone() : null;
      actual_ = other.actual_ != null ? other.actual_.Clone() : null;
      allowUnexpectedKeys_ = other.allowUnexpectedKeys_;
      rules_ = other.rules_.Clone();
      pluginConfiguration_ = other.pluginConfiguration_ != null ? other.pluginConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsRequest Clone() {
      return new CompareContentsRequest(this);
    }

    /// <summary>Field number for the "expected" field.</summary>
    public const int ExpectedFieldNumber = 1;
    private global::GrpcPactPlugin.Body expected_;
    /// <summary>
    /// Expected body from the Pact interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Expected {
      get { return expected_; }
      set {
        expected_ = value;
      }
    }

    /// <summary>Field number for the "actual" field.</summary>
    public const int ActualFieldNumber = 2;
    private global::GrpcPactPlugin.Body actual_;
    /// <summary>
    /// Actual received body
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Actual {
      get { return actual_; }
      set {
        actual_ = value;
      }
    }

    /// <summary>Field number for the "allow_unexpected_keys" field.</summary>
    public const int AllowUnexpectedKeysFieldNumber = 3;
    private bool allowUnexpectedKeys_;
    /// <summary>
    /// If unexpected keys or attributes should be allowed. Setting this to false results in additional keys or fields
    /// will cause a mismatch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowUnexpectedKeys {
      get { return allowUnexpectedKeys_; }
      set {
        allowUnexpectedKeys_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 4;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>.Codec _map_rules_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.MatchingRules.Parser), 34);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.MatchingRules> rules_ = new pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>();
    /// <summary>
    /// Map of expressions to matching rules. The expressions follow the documented Pact matching rule expressions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.MatchingRules> Rules {
      get { return rules_; }
    }

    /// <summary>Field number for the "pluginConfiguration" field.</summary>
    public const int PluginConfigurationFieldNumber = 5;
    private global::GrpcPactPlugin.PluginConfiguration pluginConfiguration_;
    /// <summary>
    /// Additional data added to the Pact/Interaction by the plugin
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.PluginConfiguration PluginConfiguration {
      get { return pluginConfiguration_; }
      set {
        pluginConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompareContentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompareContentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Expected, other.Expected)) return false;
      if (!object.Equals(Actual, other.Actual)) return false;
      if (AllowUnexpectedKeys != other.AllowUnexpectedKeys) return false;
      if (!Rules.Equals(other.Rules)) return false;
      if (!object.Equals(PluginConfiguration, other.PluginConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (expected_ != null) hash ^= Expected.GetHashCode();
      if (actual_ != null) hash ^= Actual.GetHashCode();
      if (AllowUnexpectedKeys != false) hash ^= AllowUnexpectedKeys.GetHashCode();
      hash ^= Rules.GetHashCode();
      if (pluginConfiguration_ != null) hash ^= PluginConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (expected_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Expected);
      }
      if (actual_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Actual);
      }
      if (AllowUnexpectedKeys != false) {
        output.WriteRawTag(24);
        output.WriteBool(AllowUnexpectedKeys);
      }
      rules_.WriteTo(output, _map_rules_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (expected_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Expected);
      }
      if (actual_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Actual);
      }
      if (AllowUnexpectedKeys != false) {
        output.WriteRawTag(24);
        output.WriteBool(AllowUnexpectedKeys);
      }
      rules_.WriteTo(ref output, _map_rules_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (expected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expected);
      }
      if (actual_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Actual);
      }
      if (AllowUnexpectedKeys != false) {
        size += 1 + 1;
      }
      size += rules_.CalculateSize(_map_rules_codec);
      if (pluginConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompareContentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.expected_ != null) {
        if (expected_ == null) {
          Expected = new global::GrpcPactPlugin.Body();
        }
        Expected.MergeFrom(other.Expected);
      }
      if (other.actual_ != null) {
        if (actual_ == null) {
          Actual = new global::GrpcPactPlugin.Body();
        }
        Actual.MergeFrom(other.Actual);
      }
      if (other.AllowUnexpectedKeys != false) {
        AllowUnexpectedKeys = other.AllowUnexpectedKeys;
      }
      rules_.Add(other.rules_);
      if (other.pluginConfiguration_ != null) {
        if (pluginConfiguration_ == null) {
          PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
        }
        PluginConfiguration.MergeFrom(other.PluginConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (expected_ == null) {
              Expected = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Expected);
            break;
          }
          case 18: {
            if (actual_ == null) {
              Actual = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Actual);
            break;
          }
          case 24: {
            AllowUnexpectedKeys = input.ReadBool();
            break;
          }
          case 34: {
            rules_.AddEntriesFrom(input, _map_rules_codec);
            break;
          }
          case 42: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (expected_ == null) {
              Expected = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Expected);
            break;
          }
          case 18: {
            if (actual_ == null) {
              Actual = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Actual);
            break;
          }
          case 24: {
            AllowUnexpectedKeys = input.ReadBool();
            break;
          }
          case 34: {
            rules_.AddEntriesFrom(ref input, _map_rules_codec);
            break;
          }
          case 42: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Indicates that there was a mismatch with the content type
  /// </summary>
  public sealed partial class ContentTypeMismatch : pb::IMessage<ContentTypeMismatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentTypeMismatch> _parser = new pb::MessageParser<ContentTypeMismatch>(() => new ContentTypeMismatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentTypeMismatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentTypeMismatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentTypeMismatch(ContentTypeMismatch other) : this() {
      expected_ = other.expected_;
      actual_ = other.actual_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentTypeMismatch Clone() {
      return new ContentTypeMismatch(this);
    }

    /// <summary>Field number for the "expected" field.</summary>
    public const int ExpectedFieldNumber = 1;
    private string expected_ = "";
    /// <summary>
    /// Expected content type (MIME format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expected {
      get { return expected_; }
      set {
        expected_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actual" field.</summary>
    public const int ActualFieldNumber = 2;
    private string actual_ = "";
    /// <summary>
    /// Actual content type received (MIME format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Actual {
      get { return actual_; }
      set {
        actual_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentTypeMismatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentTypeMismatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expected != other.Expected) return false;
      if (Actual != other.Actual) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Expected.Length != 0) hash ^= Expected.GetHashCode();
      if (Actual.Length != 0) hash ^= Actual.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Expected.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expected);
      }
      if (Actual.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Actual);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Expected.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expected);
      }
      if (Actual.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Actual);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Expected.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expected);
      }
      if (Actual.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Actual);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentTypeMismatch other) {
      if (other == null) {
        return;
      }
      if (other.Expected.Length != 0) {
        Expected = other.Expected;
      }
      if (other.Actual.Length != 0) {
        Actual = other.Actual;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Expected = input.ReadString();
            break;
          }
          case 18: {
            Actual = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Expected = input.ReadString();
            break;
          }
          case 18: {
            Actual = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A mismatch for an particular item of content
  /// </summary>
  public sealed partial class ContentMismatch : pb::IMessage<ContentMismatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentMismatch> _parser = new pb::MessageParser<ContentMismatch>(() => new ContentMismatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentMismatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatch(ContentMismatch other) : this() {
      Expected = other.Expected;
      Actual = other.Actual;
      mismatch_ = other.mismatch_;
      path_ = other.path_;
      diff_ = other.diff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatch Clone() {
      return new ContentMismatch(this);
    }

    /// <summary>Field number for the "expected" field.</summary>
    public const int ExpectedFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _single_expected_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(10);
    private pb::ByteString expected_;
    /// <summary>
    /// Expected data bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Expected {
      get { return expected_; }
      set {
        expected_ = value;
      }
    }


    /// <summary>Field number for the "actual" field.</summary>
    public const int ActualFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _single_actual_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(18);
    private pb::ByteString actual_;
    /// <summary>
    /// Actual data bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Actual {
      get { return actual_; }
      set {
        actual_ = value;
      }
    }


    /// <summary>Field number for the "mismatch" field.</summary>
    public const int MismatchFieldNumber = 3;
    private string mismatch_ = "";
    /// <summary>
    /// Description of the mismatch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mismatch {
      get { return mismatch_; }
      set {
        mismatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private string path_ = "";
    /// <summary>
    /// Path to the item that was matched. This is the value as per the documented Pact matching rule expressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 5;
    private string diff_ = "";
    /// <summary>
    /// Optional diff of the contents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Diff {
      get { return diff_; }
      set {
        diff_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentMismatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentMismatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expected != other.Expected) return false;
      if (Actual != other.Actual) return false;
      if (Mismatch != other.Mismatch) return false;
      if (Path != other.Path) return false;
      if (Diff != other.Diff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (expected_ != null) hash ^= Expected.GetHashCode();
      if (actual_ != null) hash ^= Actual.GetHashCode();
      if (Mismatch.Length != 0) hash ^= Mismatch.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Diff.Length != 0) hash ^= Diff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (expected_ != null) {
        _single_expected_codec.WriteTagAndValue(output, Expected);
      }
      if (actual_ != null) {
        _single_actual_codec.WriteTagAndValue(output, Actual);
      }
      if (Mismatch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mismatch);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Path);
      }
      if (Diff.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (expected_ != null) {
        _single_expected_codec.WriteTagAndValue(ref output, Expected);
      }
      if (actual_ != null) {
        _single_actual_codec.WriteTagAndValue(ref output, Actual);
      }
      if (Mismatch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mismatch);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Path);
      }
      if (Diff.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (expected_ != null) {
        size += _single_expected_codec.CalculateSizeWithTag(Expected);
      }
      if (actual_ != null) {
        size += _single_actual_codec.CalculateSizeWithTag(Actual);
      }
      if (Mismatch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mismatch);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Diff.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Diff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentMismatch other) {
      if (other == null) {
        return;
      }
      if (other.expected_ != null) {
        if (expected_ == null || other.Expected != pb::ByteString.Empty) {
          Expected = other.Expected;
        }
      }
      if (other.actual_ != null) {
        if (actual_ == null || other.Actual != pb::ByteString.Empty) {
          Actual = other.Actual;
        }
      }
      if (other.Mismatch.Length != 0) {
        Mismatch = other.Mismatch;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Diff.Length != 0) {
        Diff = other.Diff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pb::ByteString value = _single_expected_codec.Read(input);
            if (expected_ == null || value != pb::ByteString.Empty) {
              Expected = value;
            }
            break;
          }
          case 18: {
            pb::ByteString value = _single_actual_codec.Read(input);
            if (actual_ == null || value != pb::ByteString.Empty) {
              Actual = value;
            }
            break;
          }
          case 26: {
            Mismatch = input.ReadString();
            break;
          }
          case 34: {
            Path = input.ReadString();
            break;
          }
          case 42: {
            Diff = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pb::ByteString value = _single_expected_codec.Read(ref input);
            if (expected_ == null || value != pb::ByteString.Empty) {
              Expected = value;
            }
            break;
          }
          case 18: {
            pb::ByteString value = _single_actual_codec.Read(ref input);
            if (actual_ == null || value != pb::ByteString.Empty) {
              Actual = value;
            }
            break;
          }
          case 26: {
            Mismatch = input.ReadString();
            break;
          }
          case 34: {
            Path = input.ReadString();
            break;
          }
          case 42: {
            Diff = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of content mismatches
  /// </summary>
  public sealed partial class ContentMismatches : pb::IMessage<ContentMismatches>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentMismatches> _parser = new pb::MessageParser<ContentMismatches>(() => new ContentMismatches());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentMismatches> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatches() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatches(ContentMismatches other) : this() {
      mismatches_ = other.mismatches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentMismatches Clone() {
      return new ContentMismatches(this);
    }

    /// <summary>Field number for the "mismatches" field.</summary>
    public const int MismatchesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.ContentMismatch> _repeated_mismatches_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcPactPlugin.ContentMismatch.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch> mismatches_ = new pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch> Mismatches {
      get { return mismatches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentMismatches);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentMismatches other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mismatches_.Equals(other.mismatches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mismatches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mismatches_.WriteTo(output, _repeated_mismatches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mismatches_.WriteTo(ref output, _repeated_mismatches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mismatches_.CalculateSize(_repeated_mismatches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentMismatches other) {
      if (other == null) {
        return;
      }
      mismatches_.Add(other.mismatches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mismatches_.AddEntriesFrom(input, _repeated_mismatches_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mismatches_.AddEntriesFrom(ref input, _repeated_mismatches_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the CompareContentsRequest with the results of the comparison
  /// </summary>
  public sealed partial class CompareContentsResponse : pb::IMessage<CompareContentsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompareContentsResponse> _parser = new pb::MessageParser<CompareContentsResponse>(() => new CompareContentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompareContentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsResponse(CompareContentsResponse other) : this() {
      error_ = other.error_;
      typeMismatch_ = other.typeMismatch_ != null ? other.typeMismatch_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompareContentsResponse Clone() {
      return new CompareContentsResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private string error_ = "";
    /// <summary>
    /// Error message if an error occurred. If this field is set, the remaining fields will be ignored and the
    /// verification marked as failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "typeMismatch" field.</summary>
    public const int TypeMismatchFieldNumber = 2;
    private global::GrpcPactPlugin.ContentTypeMismatch typeMismatch_;
    /// <summary>
    /// There was a mismatch with the types of content. If this is set, the results may not be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.ContentTypeMismatch TypeMismatch {
      get { return typeMismatch_; }
      set {
        typeMismatch_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.ContentMismatches>.Codec _map_results_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.ContentMismatches>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.ContentMismatches.Parser), 26);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.ContentMismatches> results_ = new pbc::MapField<string, global::GrpcPactPlugin.ContentMismatches>();
    /// <summary>
    /// Results of the match, keyed by matching rule expression
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.ContentMismatches> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompareContentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompareContentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(TypeMismatch, other.TypeMismatch)) return false;
      if (!Results.Equals(other.Results)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (typeMismatch_ != null) hash ^= TypeMismatch.GetHashCode();
      hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (typeMismatch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TypeMismatch);
      }
      results_.WriteTo(output, _map_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (typeMismatch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TypeMismatch);
      }
      results_.WriteTo(ref output, _map_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (typeMismatch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeMismatch);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompareContentsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.typeMismatch_ != null) {
        if (typeMismatch_ == null) {
          TypeMismatch = new global::GrpcPactPlugin.ContentTypeMismatch();
        }
        TypeMismatch.MergeFrom(other.TypeMismatch);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            if (typeMismatch_ == null) {
              TypeMismatch = new global::GrpcPactPlugin.ContentTypeMismatch();
            }
            input.ReadMessage(TypeMismatch);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            if (typeMismatch_ == null) {
              TypeMismatch = new global::GrpcPactPlugin.ContentTypeMismatch();
            }
            input.ReadMessage(TypeMismatch);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(ref input, _map_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to configure/setup an interaction so that it can be verified later
  /// </summary>
  public sealed partial class ConfigureInteractionRequest : pb::IMessage<ConfigureInteractionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureInteractionRequest> _parser = new pb::MessageParser<ConfigureInteractionRequest>(() => new ConfigureInteractionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureInteractionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionRequest(ConfigureInteractionRequest other) : this() {
      contentType_ = other.contentType_;
      contentsConfig_ = other.contentsConfig_ != null ? other.contentsConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionRequest Clone() {
      return new ConfigureInteractionRequest(this);
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 1;
    private string contentType_ = "";
    /// <summary>
    /// Content type of the interaction (MIME format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentsConfig" field.</summary>
    public const int ContentsConfigFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct contentsConfig_;
    /// <summary>
    /// This is data specified by the user in the consumer test
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct ContentsConfig {
      get { return contentsConfig_; }
      set {
        contentsConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureInteractionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureInteractionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentType != other.ContentType) return false;
      if (!object.Equals(ContentsConfig, other.ContentsConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (contentsConfig_ != null) hash ^= ContentsConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentType);
      }
      if (contentsConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentsConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentType);
      }
      if (contentsConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentsConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (contentsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentsConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureInteractionRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      if (other.contentsConfig_ != null) {
        if (contentsConfig_ == null) {
          ContentsConfig = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        ContentsConfig.MergeFrom(other.ContentsConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContentType = input.ReadString();
            break;
          }
          case 18: {
            if (contentsConfig_ == null) {
              ContentsConfig = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(ContentsConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContentType = input.ReadString();
            break;
          }
          case 18: {
            if (contentsConfig_ == null) {
              ContentsConfig = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(ContentsConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a matching rule
  /// </summary>
  public sealed partial class MatchingRule : pb::IMessage<MatchingRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchingRule> _parser = new pb::MessageParser<MatchingRule>(() => new MatchingRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchingRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRule(MatchingRule other) : this() {
      type_ = other.type_;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRule Clone() {
      return new MatchingRule(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// Type of the matching rule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct values_;
    /// <summary>
    /// Associated data for the matching rule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchingRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchingRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchingRule other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of matching rules
  /// </summary>
  public sealed partial class MatchingRules : pb::IMessage<MatchingRules>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchingRules> _parser = new pb::MessageParser<MatchingRules>(() => new MatchingRules());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchingRules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRules(MatchingRules other) : this() {
      rule_ = other.rule_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingRules Clone() {
      return new MatchingRules(this);
    }

    /// <summary>Field number for the "rule" field.</summary>
    public const int RuleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.MatchingRule> _repeated_rule_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcPactPlugin.MatchingRule.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.MatchingRule> rule_ = new pbc::RepeatedField<global::GrpcPactPlugin.MatchingRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.MatchingRule> Rule {
      get { return rule_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchingRules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchingRules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rule_.Equals(other.rule_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rule_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rule_.WriteTo(output, _repeated_rule_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rule_.WriteTo(ref output, _repeated_rule_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rule_.CalculateSize(_repeated_rule_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchingRules other) {
      if (other == null) {
        return;
      }
      rule_.Add(other.rule_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rule_.AddEntriesFrom(input, _repeated_rule_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rule_.AddEntriesFrom(ref input, _repeated_rule_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Example generator
  /// </summary>
  public sealed partial class Generator : pb::IMessage<Generator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Generator> _parser = new pb::MessageParser<Generator>(() => new Generator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Generator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Generator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Generator(Generator other) : this() {
      type_ = other.type_;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Generator Clone() {
      return new Generator(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// Type of generator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct values_;
    /// <summary>
    /// Associated data for the generator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Generator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Generator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Generator other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Plugin configuration added to the pact file by the ConfigureInteraction step
  /// </summary>
  public sealed partial class PluginConfiguration : pb::IMessage<PluginConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PluginConfiguration> _parser = new pb::MessageParser<PluginConfiguration>(() => new PluginConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PluginConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfiguration(PluginConfiguration other) : this() {
      interactionConfiguration_ = other.interactionConfiguration_ != null ? other.interactionConfiguration_.Clone() : null;
      pactConfiguration_ = other.pactConfiguration_ != null ? other.pactConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PluginConfiguration Clone() {
      return new PluginConfiguration(this);
    }

    /// <summary>Field number for the "interactionConfiguration" field.</summary>
    public const int InteractionConfigurationFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Struct interactionConfiguration_;
    /// <summary>
    /// Data to be persisted against the interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct InteractionConfiguration {
      get { return interactionConfiguration_; }
      set {
        interactionConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "pactConfiguration" field.</summary>
    public const int PactConfigurationFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct pactConfiguration_;
    /// <summary>
    /// Data to be persisted in the Pact file metadata (Global data)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct PactConfiguration {
      get { return pactConfiguration_; }
      set {
        pactConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PluginConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PluginConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InteractionConfiguration, other.InteractionConfiguration)) return false;
      if (!object.Equals(PactConfiguration, other.PactConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (interactionConfiguration_ != null) hash ^= InteractionConfiguration.GetHashCode();
      if (pactConfiguration_ != null) hash ^= PactConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (interactionConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractionConfiguration);
      }
      if (pactConfiguration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PactConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (interactionConfiguration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractionConfiguration);
      }
      if (pactConfiguration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PactConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (interactionConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractionConfiguration);
      }
      if (pactConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PactConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PluginConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.interactionConfiguration_ != null) {
        if (interactionConfiguration_ == null) {
          InteractionConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        InteractionConfiguration.MergeFrom(other.InteractionConfiguration);
      }
      if (other.pactConfiguration_ != null) {
        if (pactConfiguration_ == null) {
          PactConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        PactConfiguration.MergeFrom(other.PactConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (interactionConfiguration_ == null) {
              InteractionConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(InteractionConfiguration);
            break;
          }
          case 18: {
            if (pactConfiguration_ == null) {
              PactConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(PactConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (interactionConfiguration_ == null) {
              InteractionConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(InteractionConfiguration);
            break;
          }
          case 18: {
            if (pactConfiguration_ == null) {
              PactConfiguration = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(PactConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the configure/setup an interaction request
  /// </summary>
  public sealed partial class InteractionResponse : pb::IMessage<InteractionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InteractionResponse> _parser = new pb::MessageParser<InteractionResponse>(() => new InteractionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InteractionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionResponse(InteractionResponse other) : this() {
      contents_ = other.contents_ != null ? other.contents_.Clone() : null;
      rules_ = other.rules_.Clone();
      generators_ = other.generators_.Clone();
      messageMetadata_ = other.messageMetadata_ != null ? other.messageMetadata_.Clone() : null;
      pluginConfiguration_ = other.pluginConfiguration_ != null ? other.pluginConfiguration_.Clone() : null;
      interactionMarkup_ = other.interactionMarkup_;
      interactionMarkupType_ = other.interactionMarkupType_;
      partName_ = other.partName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionResponse Clone() {
      return new InteractionResponse(this);
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 1;
    private global::GrpcPactPlugin.Body contents_;
    /// <summary>
    /// Contents for the interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Contents {
      get { return contents_; }
      set {
        contents_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>.Codec _map_rules_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.MatchingRules.Parser), 18);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.MatchingRules> rules_ = new pbc::MapField<string, global::GrpcPactPlugin.MatchingRules>();
    /// <summary>
    /// All matching rules to apply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.MatchingRules> Rules {
      get { return rules_; }
    }

    /// <summary>Field number for the "generators" field.</summary>
    public const int GeneratorsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.Generator>.Codec _map_generators_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.Generator>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.Generator.Parser), 26);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.Generator> generators_ = new pbc::MapField<string, global::GrpcPactPlugin.Generator>();
    /// <summary>
    /// Generators to apply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.Generator> Generators {
      get { return generators_; }
    }

    /// <summary>Field number for the "messageMetadata" field.</summary>
    public const int MessageMetadataFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Struct messageMetadata_;
    /// <summary>
    /// For message interactions, any metadata to be applied
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct MessageMetadata {
      get { return messageMetadata_; }
      set {
        messageMetadata_ = value;
      }
    }

    /// <summary>Field number for the "pluginConfiguration" field.</summary>
    public const int PluginConfigurationFieldNumber = 5;
    private global::GrpcPactPlugin.PluginConfiguration pluginConfiguration_;
    /// <summary>
    /// Plugin specific data to be persisted in the pact file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.PluginConfiguration PluginConfiguration {
      get { return pluginConfiguration_; }
      set {
        pluginConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "interactionMarkup" field.</summary>
    public const int InteractionMarkupFieldNumber = 6;
    private string interactionMarkup_ = "";
    /// <summary>
    /// Markdown/HTML formatted text representation of the interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InteractionMarkup {
      get { return interactionMarkup_; }
      set {
        interactionMarkup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interactionMarkupType" field.</summary>
    public const int InteractionMarkupTypeFieldNumber = 7;
    private global::GrpcPactPlugin.InteractionResponse.Types.MarkupType interactionMarkupType_ = global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.InteractionResponse.Types.MarkupType InteractionMarkupType {
      get { return interactionMarkupType_; }
      set {
        interactionMarkupType_ = value;
      }
    }

    /// <summary>Field number for the "partName" field.</summary>
    public const int PartNameFieldNumber = 8;
    private string partName_ = "";
    /// <summary>
    /// Description of what part this interaction belongs to (in the case of there being more than one, for instance,
    /// request/response messages)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PartName {
      get { return partName_; }
      set {
        partName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InteractionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InteractionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contents, other.Contents)) return false;
      if (!Rules.Equals(other.Rules)) return false;
      if (!Generators.Equals(other.Generators)) return false;
      if (!object.Equals(MessageMetadata, other.MessageMetadata)) return false;
      if (!object.Equals(PluginConfiguration, other.PluginConfiguration)) return false;
      if (InteractionMarkup != other.InteractionMarkup) return false;
      if (InteractionMarkupType != other.InteractionMarkupType) return false;
      if (PartName != other.PartName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contents_ != null) hash ^= Contents.GetHashCode();
      hash ^= Rules.GetHashCode();
      hash ^= Generators.GetHashCode();
      if (messageMetadata_ != null) hash ^= MessageMetadata.GetHashCode();
      if (pluginConfiguration_ != null) hash ^= PluginConfiguration.GetHashCode();
      if (InteractionMarkup.Length != 0) hash ^= InteractionMarkup.GetHashCode();
      if (InteractionMarkupType != global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark) hash ^= InteractionMarkupType.GetHashCode();
      if (PartName.Length != 0) hash ^= PartName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      rules_.WriteTo(output, _map_rules_codec);
      generators_.WriteTo(output, _map_generators_codec);
      if (messageMetadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageMetadata);
      }
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PluginConfiguration);
      }
      if (InteractionMarkup.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InteractionMarkup);
      }
      if (InteractionMarkupType != global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark) {
        output.WriteRawTag(56);
        output.WriteEnum((int) InteractionMarkupType);
      }
      if (PartName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PartName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      rules_.WriteTo(ref output, _map_rules_codec);
      generators_.WriteTo(ref output, _map_generators_codec);
      if (messageMetadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageMetadata);
      }
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PluginConfiguration);
      }
      if (InteractionMarkup.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InteractionMarkup);
      }
      if (InteractionMarkupType != global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark) {
        output.WriteRawTag(56);
        output.WriteEnum((int) InteractionMarkupType);
      }
      if (PartName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PartName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contents_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contents);
      }
      size += rules_.CalculateSize(_map_rules_codec);
      size += generators_.CalculateSize(_map_generators_codec);
      if (messageMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageMetadata);
      }
      if (pluginConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginConfiguration);
      }
      if (InteractionMarkup.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionMarkup);
      }
      if (InteractionMarkupType != global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InteractionMarkupType);
      }
      if (PartName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PartName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InteractionResponse other) {
      if (other == null) {
        return;
      }
      if (other.contents_ != null) {
        if (contents_ == null) {
          Contents = new global::GrpcPactPlugin.Body();
        }
        Contents.MergeFrom(other.Contents);
      }
      rules_.Add(other.rules_);
      generators_.Add(other.generators_);
      if (other.messageMetadata_ != null) {
        if (messageMetadata_ == null) {
          MessageMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        MessageMetadata.MergeFrom(other.MessageMetadata);
      }
      if (other.pluginConfiguration_ != null) {
        if (pluginConfiguration_ == null) {
          PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
        }
        PluginConfiguration.MergeFrom(other.PluginConfiguration);
      }
      if (other.InteractionMarkup.Length != 0) {
        InteractionMarkup = other.InteractionMarkup;
      }
      if (other.InteractionMarkupType != global::GrpcPactPlugin.InteractionResponse.Types.MarkupType.CommonMark) {
        InteractionMarkupType = other.InteractionMarkupType;
      }
      if (other.PartName.Length != 0) {
        PartName = other.PartName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(input, _map_rules_codec);
            break;
          }
          case 26: {
            generators_.AddEntriesFrom(input, _map_generators_codec);
            break;
          }
          case 34: {
            if (messageMetadata_ == null) {
              MessageMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(MessageMetadata);
            break;
          }
          case 42: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
          case 50: {
            InteractionMarkup = input.ReadString();
            break;
          }
          case 56: {
            InteractionMarkupType = (global::GrpcPactPlugin.InteractionResponse.Types.MarkupType) input.ReadEnum();
            break;
          }
          case 66: {
            PartName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(ref input, _map_rules_codec);
            break;
          }
          case 26: {
            generators_.AddEntriesFrom(ref input, _map_generators_codec);
            break;
          }
          case 34: {
            if (messageMetadata_ == null) {
              MessageMetadata = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(MessageMetadata);
            break;
          }
          case 42: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
          case 50: {
            InteractionMarkup = input.ReadString();
            break;
          }
          case 56: {
            InteractionMarkupType = (global::GrpcPactPlugin.InteractionResponse.Types.MarkupType) input.ReadEnum();
            break;
          }
          case 66: {
            PartName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InteractionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Type of markup used
      /// </summary>
      public enum MarkupType {
        /// <summary>
        /// CommonMark format
        /// </summary>
        [pbr::OriginalName("COMMON_MARK")] CommonMark = 0,
        /// <summary>
        /// HTML format
        /// </summary>
        [pbr::OriginalName("HTML")] Html = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Response to the configure/setup an interaction request
  /// </summary>
  public sealed partial class ConfigureInteractionResponse : pb::IMessage<ConfigureInteractionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureInteractionResponse> _parser = new pb::MessageParser<ConfigureInteractionResponse>(() => new ConfigureInteractionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureInteractionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionResponse(ConfigureInteractionResponse other) : this() {
      error_ = other.error_;
      interaction_ = other.interaction_.Clone();
      pluginConfiguration_ = other.pluginConfiguration_ != null ? other.pluginConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureInteractionResponse Clone() {
      return new ConfigureInteractionResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private string error_ = "";
    /// <summary>
    /// If an error occurred. In this case, the other fields will be ignored/not set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interaction" field.</summary>
    public const int InteractionFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.InteractionResponse> _repeated_interaction_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.InteractionResponse.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.InteractionResponse> interaction_ = new pbc::RepeatedField<global::GrpcPactPlugin.InteractionResponse>();
    /// <summary>
    /// The actual response if no error occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.InteractionResponse> Interaction {
      get { return interaction_; }
    }

    /// <summary>Field number for the "pluginConfiguration" field.</summary>
    public const int PluginConfigurationFieldNumber = 3;
    private global::GrpcPactPlugin.PluginConfiguration pluginConfiguration_;
    /// <summary>
    /// Plugin specific data to be persisted in the pact file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.PluginConfiguration PluginConfiguration {
      get { return pluginConfiguration_; }
      set {
        pluginConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureInteractionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureInteractionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if(!interaction_.Equals(other.interaction_)) return false;
      if (!object.Equals(PluginConfiguration, other.PluginConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= interaction_.GetHashCode();
      if (pluginConfiguration_ != null) hash ^= PluginConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      interaction_.WriteTo(output, _repeated_interaction_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      interaction_.WriteTo(ref output, _repeated_interaction_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += interaction_.CalculateSize(_repeated_interaction_codec);
      if (pluginConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureInteractionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      interaction_.Add(other.interaction_);
      if (other.pluginConfiguration_ != null) {
        if (pluginConfiguration_ == null) {
          PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
        }
        PluginConfiguration.MergeFrom(other.PluginConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            interaction_.AddEntriesFrom(input, _repeated_interaction_codec);
            break;
          }
          case 26: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            interaction_.AddEntriesFrom(ref input, _repeated_interaction_codec);
            break;
          }
          case 26: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to generate the contents using any defined generators
  /// </summary>
  public sealed partial class GenerateContentRequest : pb::IMessage<GenerateContentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateContentRequest> _parser = new pb::MessageParser<GenerateContentRequest>(() => new GenerateContentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateContentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentRequest(GenerateContentRequest other) : this() {
      contents_ = other.contents_ != null ? other.contents_.Clone() : null;
      generators_ = other.generators_.Clone();
      pluginConfiguration_ = other.pluginConfiguration_ != null ? other.pluginConfiguration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentRequest Clone() {
      return new GenerateContentRequest(this);
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 1;
    private global::GrpcPactPlugin.Body contents_;
    /// <summary>
    /// Original contents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Contents {
      get { return contents_; }
      set {
        contents_ = value;
      }
    }

    /// <summary>Field number for the "generators" field.</summary>
    public const int GeneratorsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.Generator>.Codec _map_generators_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.Generator>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.Generator.Parser), 18);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.Generator> generators_ = new pbc::MapField<string, global::GrpcPactPlugin.Generator>();
    /// <summary>
    /// Generators to apply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.Generator> Generators {
      get { return generators_; }
    }

    /// <summary>Field number for the "pluginConfiguration" field.</summary>
    public const int PluginConfigurationFieldNumber = 3;
    private global::GrpcPactPlugin.PluginConfiguration pluginConfiguration_;
    /// <summary>
    /// Additional data added to the Pact/Interaction by the plugin
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.PluginConfiguration PluginConfiguration {
      get { return pluginConfiguration_; }
      set {
        pluginConfiguration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateContentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateContentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contents, other.Contents)) return false;
      if (!Generators.Equals(other.Generators)) return false;
      if (!object.Equals(PluginConfiguration, other.PluginConfiguration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contents_ != null) hash ^= Contents.GetHashCode();
      hash ^= Generators.GetHashCode();
      if (pluginConfiguration_ != null) hash ^= PluginConfiguration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      generators_.WriteTo(output, _map_generators_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      generators_.WriteTo(ref output, _map_generators_codec);
      if (pluginConfiguration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PluginConfiguration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contents_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contents);
      }
      size += generators_.CalculateSize(_map_generators_codec);
      if (pluginConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PluginConfiguration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateContentRequest other) {
      if (other == null) {
        return;
      }
      if (other.contents_ != null) {
        if (contents_ == null) {
          Contents = new global::GrpcPactPlugin.Body();
        }
        Contents.MergeFrom(other.Contents);
      }
      generators_.Add(other.generators_);
      if (other.pluginConfiguration_ != null) {
        if (pluginConfiguration_ == null) {
          PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
        }
        PluginConfiguration.MergeFrom(other.PluginConfiguration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
          case 18: {
            generators_.AddEntriesFrom(input, _map_generators_codec);
            break;
          }
          case 26: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
          case 18: {
            generators_.AddEntriesFrom(ref input, _map_generators_codec);
            break;
          }
          case 26: {
            if (pluginConfiguration_ == null) {
              PluginConfiguration = new global::GrpcPactPlugin.PluginConfiguration();
            }
            input.ReadMessage(PluginConfiguration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Generated body/message response
  /// </summary>
  public sealed partial class GenerateContentResponse : pb::IMessage<GenerateContentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateContentResponse> _parser = new pb::MessageParser<GenerateContentResponse>(() => new GenerateContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentResponse(GenerateContentResponse other) : this() {
      contents_ = other.contents_ != null ? other.contents_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContentResponse Clone() {
      return new GenerateContentResponse(this);
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 1;
    private global::GrpcPactPlugin.Body contents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Contents {
      get { return contents_; }
      set {
        contents_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Contents, other.Contents)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contents_ != null) hash ^= Contents.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contents_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Contents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contents_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contents);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateContentResponse other) {
      if (other == null) {
        return;
      }
      if (other.contents_ != null) {
        if (contents_ == null) {
          Contents = new global::GrpcPactPlugin.Body();
        }
        Contents.MergeFrom(other.Contents);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (contents_ == null) {
              Contents = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Contents);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to start a mock server
  /// </summary>
  public sealed partial class StartMockServerRequest : pb::IMessage<StartMockServerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartMockServerRequest> _parser = new pb::MessageParser<StartMockServerRequest>(() => new StartMockServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartMockServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerRequest(StartMockServerRequest other) : this() {
      hostInterface_ = other.hostInterface_;
      port_ = other.port_;
      tls_ = other.tls_;
      pact_ = other.pact_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerRequest Clone() {
      return new StartMockServerRequest(this);
    }

    /// <summary>Field number for the "hostInterface" field.</summary>
    public const int HostInterfaceFieldNumber = 1;
    private string hostInterface_ = "";
    /// <summary>
    /// Interface to bind to. Will default to the loopback adapter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostInterface {
      get { return hostInterface_; }
      set {
        hostInterface_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    /// <summary>
    /// Port to bind to. Default (or a value of 0) get the OS to open a random port
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "tls" field.</summary>
    public const int TlsFieldNumber = 3;
    private bool tls_;
    /// <summary>
    /// If TLS should be used (if supported by the mock server)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Tls {
      get { return tls_; }
      set {
        tls_ = value;
      }
    }

    /// <summary>Field number for the "pact" field.</summary>
    public const int PactFieldNumber = 4;
    private string pact_ = "";
    /// <summary>
    /// Pact as JSON to use for the mock server behaviour
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pact {
      get { return pact_; }
      set {
        pact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartMockServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartMockServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostInterface != other.HostInterface) return false;
      if (Port != other.Port) return false;
      if (Tls != other.Tls) return false;
      if (Pact != other.Pact) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HostInterface.Length != 0) hash ^= HostInterface.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Tls != false) hash ^= Tls.GetHashCode();
      if (Pact.Length != 0) hash ^= Pact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HostInterface.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HostInterface);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (Tls != false) {
        output.WriteRawTag(24);
        output.WriteBool(Tls);
      }
      if (Pact.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HostInterface.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HostInterface);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (Tls != false) {
        output.WriteRawTag(24);
        output.WriteBool(Tls);
      }
      if (Pact.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HostInterface.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostInterface);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (Tls != false) {
        size += 1 + 1;
      }
      if (Pact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartMockServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.HostInterface.Length != 0) {
        HostInterface = other.HostInterface;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Tls != false) {
        Tls = other.Tls;
      }
      if (other.Pact.Length != 0) {
        Pact = other.Pact;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostInterface = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 24: {
            Tls = input.ReadBool();
            break;
          }
          case 34: {
            Pact = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            HostInterface = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 24: {
            Tls = input.ReadBool();
            break;
          }
          case 34: {
            Pact = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the start mock server request
  /// </summary>
  public sealed partial class StartMockServerResponse : pb::IMessage<StartMockServerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartMockServerResponse> _parser = new pb::MessageParser<StartMockServerResponse>(() => new StartMockServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartMockServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerResponse(StartMockServerResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.Details:
          Details = other.Details.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartMockServerResponse Clone() {
      return new StartMockServerResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    /// <summary>
    /// If an error occurred
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.Error;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 2;
    /// <summary>
    /// Mock server details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.MockServerDetails Details {
      get { return responseCase_ == ResponseOneofCase.Details ? (global::GrpcPactPlugin.MockServerDetails) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Details;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Error = 1,
      Details = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartMockServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartMockServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Details) hash ^= Details.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.Details) {
        output.WriteRawTag(18);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.Details) {
        output.WriteRawTag(18);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (responseCase_ == ResponseOneofCase.Details) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartMockServerResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.Details:
          if (Details == null) {
            Details = new global::GrpcPactPlugin.MockServerDetails();
          }
          Details.MergeFrom(other.Details);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.MockServerDetails subBuilder = new global::GrpcPactPlugin.MockServerDetails();
            if (responseCase_ == ResponseOneofCase.Details) {
              subBuilder.MergeFrom(Details);
            }
            input.ReadMessage(subBuilder);
            Details = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.MockServerDetails subBuilder = new global::GrpcPactPlugin.MockServerDetails();
            if (responseCase_ == ResponseOneofCase.Details) {
              subBuilder.MergeFrom(Details);
            }
            input.ReadMessage(subBuilder);
            Details = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details on a running mock server
  /// </summary>
  public sealed partial class MockServerDetails : pb::IMessage<MockServerDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockServerDetails> _parser = new pb::MessageParser<MockServerDetails>(() => new MockServerDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockServerDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerDetails(MockServerDetails other) : this() {
      key_ = other.key_;
      port_ = other.port_;
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerDetails Clone() {
      return new MockServerDetails(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// Mock server unique ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    /// <summary>
    /// Port the mock server is running on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private string address_ = "";
    /// <summary>
    /// IP address the mock server is bound to. Probably an IP6 address, but may be IP4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockServerDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockServerDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Port != other.Port) return false;
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockServerDetails other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 26: {
            Address = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 26: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to shut down a running mock server
  /// TODO: replace this with MockServerRequest in the next major version
  /// </summary>
  public sealed partial class ShutdownMockServerRequest : pb::IMessage<ShutdownMockServerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShutdownMockServerRequest> _parser = new pb::MessageParser<ShutdownMockServerRequest>(() => new ShutdownMockServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownMockServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerRequest(ShutdownMockServerRequest other) : this() {
      serverKey_ = other.serverKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerRequest Clone() {
      return new ShutdownMockServerRequest(this);
    }

    /// <summary>Field number for the "serverKey" field.</summary>
    public const int ServerKeyFieldNumber = 1;
    private string serverKey_ = "";
    /// <summary>
    /// The server ID to shutdown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerKey {
      get { return serverKey_; }
      set {
        serverKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownMockServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownMockServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerKey != other.ServerKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerKey.Length != 0) hash ^= ServerKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServerKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServerKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownMockServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServerKey.Length != 0) {
        ServerKey = other.ServerKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServerKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for a running mock server by ID
  /// </summary>
  public sealed partial class MockServerRequest : pb::IMessage<MockServerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockServerRequest> _parser = new pb::MessageParser<MockServerRequest>(() => new MockServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerRequest(MockServerRequest other) : this() {
      serverKey_ = other.serverKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerRequest Clone() {
      return new MockServerRequest(this);
    }

    /// <summary>Field number for the "serverKey" field.</summary>
    public const int ServerKeyFieldNumber = 1;
    private string serverKey_ = "";
    /// <summary>
    /// The server ID to shutdown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerKey {
      get { return serverKey_; }
      set {
        serverKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerKey != other.ServerKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerKey.Length != 0) hash ^= ServerKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServerKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServerKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServerKey.Length != 0) {
        ServerKey = other.ServerKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServerKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of a request that the mock server received
  /// </summary>
  public sealed partial class MockServerResult : pb::IMessage<MockServerResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockServerResult> _parser = new pb::MessageParser<MockServerResult>(() => new MockServerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockServerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResult(MockServerResult other) : this() {
      path_ = other.path_;
      error_ = other.error_;
      mismatches_ = other.mismatches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResult Clone() {
      return new MockServerResult(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// service + method that was requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// If an error occurred trying to handle the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mismatches" field.</summary>
    public const int MismatchesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.ContentMismatch> _repeated_mismatches_codec
        = pb::FieldCodec.ForMessage(26, global::GrpcPactPlugin.ContentMismatch.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch> mismatches_ = new pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch>();
    /// <summary>
    /// Any mismatches that occurred
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.ContentMismatch> Mismatches {
      get { return mismatches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockServerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockServerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Error != other.Error) return false;
      if(!mismatches_.Equals(other.mismatches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= mismatches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      mismatches_.WriteTo(output, _repeated_mismatches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      mismatches_.WriteTo(ref output, _repeated_mismatches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += mismatches_.CalculateSize(_repeated_mismatches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockServerResult other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      mismatches_.Add(other.mismatches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            mismatches_.AddEntriesFrom(input, _repeated_mismatches_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            mismatches_.AddEntriesFrom(ref input, _repeated_mismatches_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the shut down mock server request
  /// TODO: replace this with MockServerResults in the next major version
  /// </summary>
  public sealed partial class ShutdownMockServerResponse : pb::IMessage<ShutdownMockServerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShutdownMockServerResponse> _parser = new pb::MessageParser<ShutdownMockServerResponse>(() => new ShutdownMockServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownMockServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerResponse(ShutdownMockServerResponse other) : this() {
      ok_ = other.ok_;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownMockServerResponse Clone() {
      return new ShutdownMockServerResponse(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    /// <summary>
    /// If the mock status is all ok
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.MockServerResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.MockServerResult.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult> results_ = new pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult>();
    /// <summary>
    /// The results of the test run, will contain an entry for each request received by the mock server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownMockServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownMockServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownMockServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Matching results of the mock server.
  /// </summary>
  public sealed partial class MockServerResults : pb::IMessage<MockServerResults>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockServerResults> _parser = new pb::MessageParser<MockServerResults>(() => new MockServerResults());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockServerResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResults(MockServerResults other) : this() {
      ok_ = other.ok_;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockServerResults Clone() {
      return new MockServerResults(this);
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    /// <summary>
    /// If the mock status is all ok
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.MockServerResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.MockServerResult.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult> results_ = new pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult>();
    /// <summary>
    /// The results of the test run, will contain an entry for each request received by the mock server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.MockServerResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockServerResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockServerResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockServerResults other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to prepare an interaction for verification
  /// </summary>
  public sealed partial class VerificationPreparationRequest : pb::IMessage<VerificationPreparationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerificationPreparationRequest> _parser = new pb::MessageParser<VerificationPreparationRequest>(() => new VerificationPreparationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationPreparationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationRequest(VerificationPreparationRequest other) : this() {
      pact_ = other.pact_;
      interactionKey_ = other.interactionKey_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationRequest Clone() {
      return new VerificationPreparationRequest(this);
    }

    /// <summary>Field number for the "pact" field.</summary>
    public const int PactFieldNumber = 1;
    private string pact_ = "";
    /// <summary>
    /// Pact as JSON to use for the verification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pact {
      get { return pact_; }
      set {
        pact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interactionKey" field.</summary>
    public const int InteractionKeyFieldNumber = 2;
    private string interactionKey_ = "";
    /// <summary>
    /// Interaction key for the interaction from the Pact that is being verified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InteractionKey {
      get { return interactionKey_; }
      set {
        interactionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Struct config_;
    /// <summary>
    /// Any data supplied by the user to verify the interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationPreparationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationPreparationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pact != other.Pact) return false;
      if (InteractionKey != other.InteractionKey) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pact.Length != 0) hash ^= Pact.GetHashCode();
      if (InteractionKey.Length != 0) hash ^= InteractionKey.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pact.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pact);
      }
      if (InteractionKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InteractionKey);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pact.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pact);
      }
      if (InteractionKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InteractionKey);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pact);
      }
      if (InteractionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionKey);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationPreparationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pact.Length != 0) {
        Pact = other.Pact;
      }
      if (other.InteractionKey.Length != 0) {
        InteractionKey = other.InteractionKey;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pact = input.ReadString();
            break;
          }
          case 18: {
            InteractionKey = input.ReadString();
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Pact = input.ReadString();
            break;
          }
          case 18: {
            InteractionKey = input.ReadString();
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request metadata value. Will either be a JSON-like value, or binary data
  /// </summary>
  public sealed partial class MetadataValue : pb::IMessage<MetadataValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetadataValue> _parser = new pb::MessageParser<MetadataValue>(() => new MetadataValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetadataValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataValue(MetadataValue other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.NonBinaryValue:
          NonBinaryValue = other.NonBinaryValue.Clone();
          break;
        case ValueOneofCase.BinaryValue:
          BinaryValue = other.BinaryValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataValue Clone() {
      return new MetadataValue(this);
    }

    /// <summary>Field number for the "nonBinaryValue" field.</summary>
    public const int NonBinaryValueFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Value NonBinaryValue {
      get { return valueCase_ == ValueOneofCase.NonBinaryValue ? (global::Google.Protobuf.WellKnownTypes.Value) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.NonBinaryValue;
      }
    }

    /// <summary>Field number for the "binaryValue" field.</summary>
    public const int BinaryValueFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryValue {
      get { return valueCase_ == ValueOneofCase.BinaryValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.BinaryValue;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      NonBinaryValue = 1,
      BinaryValue = 2,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetadataValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetadataValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NonBinaryValue, other.NonBinaryValue)) return false;
      if (BinaryValue != other.BinaryValue) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.NonBinaryValue) hash ^= NonBinaryValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.BinaryValue) hash ^= BinaryValue.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valueCase_ == ValueOneofCase.NonBinaryValue) {
        output.WriteRawTag(10);
        output.WriteMessage(NonBinaryValue);
      }
      if (valueCase_ == ValueOneofCase.BinaryValue) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valueCase_ == ValueOneofCase.NonBinaryValue) {
        output.WriteRawTag(10);
        output.WriteMessage(NonBinaryValue);
      }
      if (valueCase_ == ValueOneofCase.BinaryValue) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.NonBinaryValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NonBinaryValue);
      }
      if (valueCase_ == ValueOneofCase.BinaryValue) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetadataValue other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.NonBinaryValue:
          if (NonBinaryValue == null) {
            NonBinaryValue = new global::Google.Protobuf.WellKnownTypes.Value();
          }
          NonBinaryValue.MergeFrom(other.NonBinaryValue);
          break;
        case ValueOneofCase.BinaryValue:
          BinaryValue = other.BinaryValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Value subBuilder = new global::Google.Protobuf.WellKnownTypes.Value();
            if (valueCase_ == ValueOneofCase.NonBinaryValue) {
              subBuilder.MergeFrom(NonBinaryValue);
            }
            input.ReadMessage(subBuilder);
            NonBinaryValue = subBuilder;
            break;
          }
          case 18: {
            BinaryValue = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Value subBuilder = new global::Google.Protobuf.WellKnownTypes.Value();
            if (valueCase_ == ValueOneofCase.NonBinaryValue) {
              subBuilder.MergeFrom(NonBinaryValue);
            }
            input.ReadMessage(subBuilder);
            NonBinaryValue = subBuilder;
            break;
          }
          case 18: {
            BinaryValue = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Interaction request data to be sent or received for verification
  /// </summary>
  public sealed partial class InteractionData : pb::IMessage<InteractionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InteractionData> _parser = new pb::MessageParser<InteractionData>(() => new InteractionData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InteractionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionData(InteractionData other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractionData Clone() {
      return new InteractionData(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::GrpcPactPlugin.Body body_;
    /// <summary>
    /// Request/Response body as bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private static readonly pbc::MapField<string, global::GrpcPactPlugin.MetadataValue>.Codec _map_metadata_codec
        = new pbc::MapField<string, global::GrpcPactPlugin.MetadataValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::GrpcPactPlugin.MetadataValue.Parser), 18);
    private readonly pbc::MapField<string, global::GrpcPactPlugin.MetadataValue> metadata_ = new pbc::MapField<string, global::GrpcPactPlugin.MetadataValue>();
    /// <summary>
    /// Metadata associated with the request/response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GrpcPactPlugin.MetadataValue> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InteractionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InteractionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      metadata_.WriteTo(output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InteractionData other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::GrpcPactPlugin.Body();
        }
        Body.MergeFrom(other.Body);
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::GrpcPactPlugin.Body();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for the prepare an interaction for verification request
  /// </summary>
  public sealed partial class VerificationPreparationResponse : pb::IMessage<VerificationPreparationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerificationPreparationResponse> _parser = new pb::MessageParser<VerificationPreparationResponse>(() => new VerificationPreparationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationPreparationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationResponse(VerificationPreparationResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.InteractionData:
          InteractionData = other.InteractionData.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationPreparationResponse Clone() {
      return new VerificationPreparationResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    /// <summary>
    /// If an error occurred
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.Error;
      }
    }

    /// <summary>Field number for the "interactionData" field.</summary>
    public const int InteractionDataFieldNumber = 2;
    /// <summary>
    /// Interaction data required to construct any request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.InteractionData InteractionData {
      get { return responseCase_ == ResponseOneofCase.InteractionData ? (global::GrpcPactPlugin.InteractionData) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.InteractionData;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Error = 1,
      InteractionData = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationPreparationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationPreparationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(InteractionData, other.InteractionData)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      if (responseCase_ == ResponseOneofCase.InteractionData) hash ^= InteractionData.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.InteractionData) {
        output.WriteRawTag(18);
        output.WriteMessage(InteractionData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.InteractionData) {
        output.WriteRawTag(18);
        output.WriteMessage(InteractionData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (responseCase_ == ResponseOneofCase.InteractionData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractionData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationPreparationResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.InteractionData:
          if (InteractionData == null) {
            InteractionData = new global::GrpcPactPlugin.InteractionData();
          }
          InteractionData.MergeFrom(other.InteractionData);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.InteractionData subBuilder = new global::GrpcPactPlugin.InteractionData();
            if (responseCase_ == ResponseOneofCase.InteractionData) {
              subBuilder.MergeFrom(InteractionData);
            }
            input.ReadMessage(subBuilder);
            InteractionData = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.InteractionData subBuilder = new global::GrpcPactPlugin.InteractionData();
            if (responseCase_ == ResponseOneofCase.InteractionData) {
              subBuilder.MergeFrom(InteractionData);
            }
            input.ReadMessage(subBuilder);
            InteractionData = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request data to verify an interaction
  /// </summary>
  public sealed partial class VerifyInteractionRequest : pb::IMessage<VerifyInteractionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerifyInteractionRequest> _parser = new pb::MessageParser<VerifyInteractionRequest>(() => new VerifyInteractionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyInteractionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionRequest(VerifyInteractionRequest other) : this() {
      interactionData_ = other.interactionData_ != null ? other.interactionData_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      pact_ = other.pact_;
      interactionKey_ = other.interactionKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionRequest Clone() {
      return new VerifyInteractionRequest(this);
    }

    /// <summary>Field number for the "interactionData" field.</summary>
    public const int InteractionDataFieldNumber = 1;
    private global::GrpcPactPlugin.InteractionData interactionData_;
    /// <summary>
    /// Interaction data required to construct the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.InteractionData InteractionData {
      get { return interactionData_; }
      set {
        interactionData_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct config_;
    /// <summary>
    /// Any data supplied by the user to verify the interaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "pact" field.</summary>
    public const int PactFieldNumber = 3;
    private string pact_ = "";
    /// <summary>
    /// Pact as JSON to use for the verification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pact {
      get { return pact_; }
      set {
        pact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interactionKey" field.</summary>
    public const int InteractionKeyFieldNumber = 4;
    private string interactionKey_ = "";
    /// <summary>
    /// Interaction key for the interaction from the Pact that is being verified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InteractionKey {
      get { return interactionKey_; }
      set {
        interactionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyInteractionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyInteractionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InteractionData, other.InteractionData)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Pact != other.Pact) return false;
      if (InteractionKey != other.InteractionKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (interactionData_ != null) hash ^= InteractionData.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (Pact.Length != 0) hash ^= Pact.GetHashCode();
      if (InteractionKey.Length != 0) hash ^= InteractionKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (interactionData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractionData);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (Pact.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pact);
      }
      if (InteractionKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InteractionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (interactionData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InteractionData);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (Pact.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pact);
      }
      if (InteractionKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InteractionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (interactionData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InteractionData);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (Pact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pact);
      }
      if (InteractionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InteractionKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyInteractionRequest other) {
      if (other == null) {
        return;
      }
      if (other.interactionData_ != null) {
        if (interactionData_ == null) {
          InteractionData = new global::GrpcPactPlugin.InteractionData();
        }
        InteractionData.MergeFrom(other.InteractionData);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.Pact.Length != 0) {
        Pact = other.Pact;
      }
      if (other.InteractionKey.Length != 0) {
        InteractionKey = other.InteractionKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (interactionData_ == null) {
              InteractionData = new global::GrpcPactPlugin.InteractionData();
            }
            input.ReadMessage(InteractionData);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            Pact = input.ReadString();
            break;
          }
          case 34: {
            InteractionKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (interactionData_ == null) {
              InteractionData = new global::GrpcPactPlugin.InteractionData();
            }
            input.ReadMessage(InteractionData);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            Pact = input.ReadString();
            break;
          }
          case 34: {
            InteractionKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VerificationResultItem : pb::IMessage<VerificationResultItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerificationResultItem> _parser = new pb::MessageParser<VerificationResultItem>(() => new VerificationResultItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationResultItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResultItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResultItem(VerificationResultItem other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Error:
          Error = other.Error;
          break;
        case ResultOneofCase.Mismatch:
          Mismatch = other.Mismatch.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResultItem Clone() {
      return new VerificationResultItem(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return resultCase_ == ResultOneofCase.Error ? (string) result_ : ""; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resultCase_ = ResultOneofCase.Error;
      }
    }

    /// <summary>Field number for the "mismatch" field.</summary>
    public const int MismatchFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.ContentMismatch Mismatch {
      get { return resultCase_ == ResultOneofCase.Mismatch ? (global::GrpcPactPlugin.ContentMismatch) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Mismatch;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Error = 1,
      Mismatch = 2,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationResultItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationResultItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Mismatch, other.Mismatch)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Error) hash ^= Error.GetHashCode();
      if (resultCase_ == ResultOneofCase.Mismatch) hash ^= Mismatch.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (resultCase_ == ResultOneofCase.Mismatch) {
        output.WriteRawTag(18);
        output.WriteMessage(Mismatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (resultCase_ == ResultOneofCase.Mismatch) {
        output.WriteRawTag(18);
        output.WriteMessage(Mismatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (resultCase_ == ResultOneofCase.Mismatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mismatch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationResultItem other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Error:
          Error = other.Error;
          break;
        case ResultOneofCase.Mismatch:
          if (Mismatch == null) {
            Mismatch = new global::GrpcPactPlugin.ContentMismatch();
          }
          Mismatch.MergeFrom(other.Mismatch);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.ContentMismatch subBuilder = new global::GrpcPactPlugin.ContentMismatch();
            if (resultCase_ == ResultOneofCase.Mismatch) {
              subBuilder.MergeFrom(Mismatch);
            }
            input.ReadMessage(subBuilder);
            Mismatch = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.ContentMismatch subBuilder = new global::GrpcPactPlugin.ContentMismatch();
            if (resultCase_ == ResultOneofCase.Mismatch) {
              subBuilder.MergeFrom(Mismatch);
            }
            input.ReadMessage(subBuilder);
            Mismatch = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of running the verification
  /// </summary>
  public sealed partial class VerificationResult : pb::IMessage<VerificationResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerificationResult> _parser = new pb::MessageParser<VerificationResult>(() => new VerificationResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResult(VerificationResult other) : this() {
      success_ = other.success_;
      responseData_ = other.responseData_ != null ? other.responseData_.Clone() : null;
      mismatches_ = other.mismatches_.Clone();
      output_ = other.output_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResult Clone() {
      return new VerificationResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    /// Was the verification successful?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "responseData" field.</summary>
    public const int ResponseDataFieldNumber = 2;
    private global::GrpcPactPlugin.InteractionData responseData_;
    /// <summary>
    /// Interaction data retrieved from the provider (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.InteractionData ResponseData {
      get { return responseData_; }
      set {
        responseData_ = value;
      }
    }

    /// <summary>Field number for the "mismatches" field.</summary>
    public const int MismatchesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GrpcPactPlugin.VerificationResultItem> _repeated_mismatches_codec
        = pb::FieldCodec.ForMessage(26, global::GrpcPactPlugin.VerificationResultItem.Parser);
    private readonly pbc::RepeatedField<global::GrpcPactPlugin.VerificationResultItem> mismatches_ = new pbc::RepeatedField<global::GrpcPactPlugin.VerificationResultItem>();
    /// <summary>
    /// Any mismatches that occurred
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcPactPlugin.VerificationResultItem> Mismatches {
      get { return mismatches_; }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_output_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> output_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output for the verification to display to the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Output {
      get { return output_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(ResponseData, other.ResponseData)) return false;
      if(!mismatches_.Equals(other.mismatches_)) return false;
      if(!output_.Equals(other.output_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (responseData_ != null) hash ^= ResponseData.GetHashCode();
      hash ^= mismatches_.GetHashCode();
      hash ^= output_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (responseData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseData);
      }
      mismatches_.WriteTo(output, _repeated_mismatches_codec);
      output_.WriteTo(output, _repeated_output_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (responseData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseData);
      }
      mismatches_.WriteTo(ref output, _repeated_mismatches_codec);
      output_.WriteTo(ref output, _repeated_output_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (responseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseData);
      }
      size += mismatches_.CalculateSize(_repeated_mismatches_codec);
      size += output_.CalculateSize(_repeated_output_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.responseData_ != null) {
        if (responseData_ == null) {
          ResponseData = new global::GrpcPactPlugin.InteractionData();
        }
        ResponseData.MergeFrom(other.ResponseData);
      }
      mismatches_.Add(other.mismatches_);
      output_.Add(other.output_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (responseData_ == null) {
              ResponseData = new global::GrpcPactPlugin.InteractionData();
            }
            input.ReadMessage(ResponseData);
            break;
          }
          case 26: {
            mismatches_.AddEntriesFrom(input, _repeated_mismatches_codec);
            break;
          }
          case 34: {
            output_.AddEntriesFrom(input, _repeated_output_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (responseData_ == null) {
              ResponseData = new global::GrpcPactPlugin.InteractionData();
            }
            input.ReadMessage(ResponseData);
            break;
          }
          case 26: {
            mismatches_.AddEntriesFrom(ref input, _repeated_mismatches_codec);
            break;
          }
          case 34: {
            output_.AddEntriesFrom(ref input, _repeated_output_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of running the verification
  /// </summary>
  public sealed partial class VerifyInteractionResponse : pb::IMessage<VerifyInteractionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerifyInteractionResponse> _parser = new pb::MessageParser<VerifyInteractionResponse>(() => new VerifyInteractionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyInteractionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPactPlugin.PluginReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionResponse(VerifyInteractionResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.Result:
          Result = other.Result.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyInteractionResponse Clone() {
      return new VerifyInteractionResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    /// <summary>
    /// If an error occurred trying to run the verification
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.Error;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPactPlugin.VerificationResult Result {
      get { return responseCase_ == ResponseOneofCase.Result ? (global::GrpcPactPlugin.VerificationResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Result;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Error = 1,
      Result = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyInteractionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyInteractionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Result) hash ^= Result.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (responseCase_ == ResponseOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (responseCase_ == ResponseOneofCase.Result) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyInteractionResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Error:
          Error = other.Error;
          break;
        case ResponseOneofCase.Result:
          if (Result == null) {
            Result = new global::GrpcPactPlugin.VerificationResult();
          }
          Result.MergeFrom(other.Result);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.VerificationResult subBuilder = new global::GrpcPactPlugin.VerificationResult();
            if (responseCase_ == ResponseOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            global::GrpcPactPlugin.VerificationResult subBuilder = new global::GrpcPactPlugin.VerificationResult();
            if (responseCase_ == ResponseOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
